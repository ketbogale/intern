{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import LoginPage from'./components/LoginPage';import AttendancePage from'./components/AttendancePage';import Dashboard from'./components/Dashboard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const[user,setUser]=useState(null);const handleLogin=userData=>{setIsLoggedIn(true);setUser(userData);};const handleLogout=()=>{setIsLoggedIn(false);setUser(null);};const renderUserInterface=()=>{if(!user)return null;// Role-based routing\nswitch(user.role){case'admin':return/*#__PURE__*/_jsx(Dashboard,{user:user,onLogout:handleLogout});case'scanner':return/*#__PURE__*/_jsx(AttendancePage,{user:user,onLogout:handleLogout});default:return/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Access Denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Invalid user role. Please contact administrator.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Back to Login\"})]});}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!isLoggedIn?/*#__PURE__*/_jsx(LoginPage,{onLogin:handleLogin}):renderUserInterface()});}export default App;","map":{"version":3,"names":["React","useState","LoginPage","AttendancePage","Dashboard","jsx","_jsx","jsxs","_jsxs","App","isLoggedIn","setIsLoggedIn","user","setUser","handleLogin","userData","handleLogout","renderUserInterface","role","onLogout","className","children","onClick","onLogin"],"sources":["C:/Users/hp/OneDrive/Desktop/Intern/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport LoginPage from './components/LoginPage';\nimport AttendancePage from './components/AttendancePage';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const handleLogin = (userData) => {\n    setIsLoggedIn(true);\n    setUser(userData);\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n\n  const renderUserInterface = () => {\n    if (!user) return null;\n\n    // Role-based routing\n    switch (user.role) {\n      case 'admin':\n        return <Dashboard user={user} onLogout={handleLogout} />;\n      case 'scanner':\n        return <AttendancePage user={user} onLogout={handleLogout} />;\n      default:\n        return (\n          <div className=\"error-container\">\n            <h2>Access Denied</h2>\n            <p>Invalid user role. Please contact administrator.</p>\n            <button onClick={handleLogout}>Back to Login</button>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!isLoggedIn ? (\n        <LoginPage onLogin={handleLogin} />\n      ) : (\n        renderUserInterface()\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAClB,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAEtC,KAAM,CAAAa,WAAW,CAAIC,QAAQ,EAAK,CAChCJ,aAAa,CAAC,IAAI,CAAC,CACnBE,OAAO,CAACE,QAAQ,CAAC,CACnB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBL,aAAa,CAAC,KAAK,CAAC,CACpBE,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAI,mBAAmB,CAAGA,CAAA,GAAM,CAChC,GAAI,CAACL,IAAI,CAAE,MAAO,KAAI,CAEtB;AACA,OAAQA,IAAI,CAACM,IAAI,EACf,IAAK,OAAO,CACV,mBAAOZ,IAAA,CAACF,SAAS,EAACQ,IAAI,CAAEA,IAAK,CAACO,QAAQ,CAAEH,YAAa,CAAE,CAAC,CAC1D,IAAK,SAAS,CACZ,mBAAOV,IAAA,CAACH,cAAc,EAACS,IAAI,CAAEA,IAAK,CAACO,QAAQ,CAAEH,YAAa,CAAE,CAAC,CAC/D,QACE,mBACER,KAAA,QAAKY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9Bf,IAAA,OAAAe,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBf,IAAA,MAAAe,QAAA,CAAG,kDAAgD,CAAG,CAAC,cACvDf,IAAA,WAAQgB,OAAO,CAAEN,YAAa,CAAAK,QAAA,CAAC,eAAa,CAAQ,CAAC,EAClD,CAAC,CAEZ,CACF,CAAC,CAED,mBACEf,IAAA,QAAKc,SAAS,CAAC,KAAK,CAAAC,QAAA,CACjB,CAACX,UAAU,cACVJ,IAAA,CAACJ,SAAS,EAACqB,OAAO,CAAET,WAAY,CAAE,CAAC,CAEnCG,mBAAmB,CAAC,CACrB,CACE,CAAC,CAEV,CAEA,cAAe,CAAAR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}