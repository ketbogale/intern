{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Intern\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Notification.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  lowAttendanceAlert,\n  mealWindows,\n  lastUpdated,\n  refreshMessage,\n  newStudentRegistrations = [],\n  onMarkAsRead,\n  onClearAll\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const dropdownRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Generate notifications based on props\n  useEffect(() => {\n    const newNotifications = [];\n    const currentTime = new Date();\n\n    // Low Attendance Alerts\n    if (lowAttendanceAlert) {\n      newNotifications.push({\n        id: 'low-attendance',\n        type: 'alert',\n        icon: '🚨',\n        title: 'Low Attendance Alert',\n        message: `Attendance is ${lowAttendanceAlert.percentage}% - below ${lowAttendanceAlert.threshold}% threshold`,\n        timestamp: new Date(),\n        priority: 'high',\n        read: false\n      });\n    }\n\n    // Meal Window Reminders\n    Object.entries(mealWindows).forEach(([mealType, window]) => {\n      if (!window.enabled) return;\n      const [startHour, startMinute] = window.startTime.split(':').map(Number);\n      const [endHour, endMinute] = window.endTime.split(':').map(Number);\n      const startTime = new Date();\n      startTime.setHours(startHour, startMinute, 0, 0);\n      const endTime = new Date();\n      endTime.setHours(endHour, endMinute, 0, 0);\n\n      // Check if meal window is starting soon (30 minutes before)\n      const timeUntilStart = startTime - currentTime;\n      if (timeUntilStart > 0 && timeUntilStart <= 30 * 60 * 1000) {\n        newNotifications.push({\n          id: `meal-start-${mealType}`,\n          type: 'reminder',\n          icon: '⏰',\n          title: 'Meal Window Opening',\n          message: `${mealType.charAt(0).toUpperCase() + mealType.slice(1)} window opens in ${Math.ceil(timeUntilStart / (60 * 1000))} minutes`,\n          timestamp: new Date(),\n          priority: 'medium',\n          read: false\n        });\n      }\n\n      // Check if meal window is ending soon (15 minutes before end)\n      const timeUntilEnd = endTime - currentTime;\n      if (timeUntilEnd > 0 && timeUntilEnd <= 15 * 60 * 1000 && currentTime >= startTime) {\n        newNotifications.push({\n          id: `meal-end-${mealType}`,\n          type: 'reminder',\n          icon: '⏰',\n          title: 'Meal Window Closing',\n          message: `${mealType.charAt(0).toUpperCase() + mealType.slice(1)} window closes in ${Math.ceil(timeUntilEnd / (60 * 1000))} minutes`,\n          timestamp: new Date(),\n          priority: 'high',\n          read: false\n        });\n      }\n    });\n\n    // Data Sync Updates\n    if (refreshMessage && refreshMessage.includes('✅')) {\n      newNotifications.push({\n        id: 'data-sync',\n        type: 'update',\n        icon: '🔄',\n        title: 'Data Sync Complete',\n        message: `Dashboard data refreshed at ${lastUpdated}`,\n        timestamp: new Date(),\n        priority: 'low',\n        read: false\n      });\n    }\n\n    // New Student Registrations\n    newStudentRegistrations.forEach((student, index) => {\n      newNotifications.push({\n        id: `new-student-${student.id || index}`,\n        type: 'info',\n        icon: '👥',\n        title: 'New Student Registered',\n        message: `${student.name} (${student.id}) has been added to the system`,\n        timestamp: student.registeredAt || new Date(),\n        priority: 'medium',\n        read: false\n      });\n    });\n\n    // Sort by priority and timestamp\n    const priorityOrder = {\n      high: 3,\n      medium: 2,\n      low: 1\n    };\n    newNotifications.sort((a, b) => {\n      if (priorityOrder[a.priority] !== priorityOrder[b.priority]) {\n        return priorityOrder[b.priority] - priorityOrder[a.priority];\n      }\n      return new Date(b.timestamp) - new Date(a.timestamp);\n    });\n    setNotifications(newNotifications);\n    setUnreadCount(newNotifications.filter(n => !n.read).length);\n  }, [lowAttendanceAlert, mealWindows, refreshMessage, lastUpdated, newStudentRegistrations]);\n  const handleNotificationClick = notification => {\n    if (!notification.read && onMarkAsRead) {\n      onMarkAsRead(notification.id);\n    }\n  };\n  const handleClearAll = () => {\n    if (onClearAll) {\n      onClearAll();\n    }\n    setNotifications([]);\n    setUnreadCount(0);\n  };\n  const formatTimestamp = timestamp => {\n    const now = new Date();\n    const notificationTime = new Date(timestamp);\n    const diffInMinutes = Math.floor((now - notificationTime) / (1000 * 60));\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return notificationTime.toLocaleDateString();\n  };\n  const getPriorityClass = priority => {\n    switch (priority) {\n      case 'high':\n        return 'notification-high';\n      case 'medium':\n        return 'notification-medium';\n      case 'low':\n        return 'notification-low';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `notification-bell ${unreadCount > 0 ? 'has-notifications' : ''}`,\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bell-icon\",\n        children: \"\\uD83D\\uDD14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount > 99 ? '99+' : unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-all-btn\",\n          onClick: handleClearAll,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-notifications\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-notifications-icon\",\n            children: \"\\uD83D\\uDD15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No new notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${getPriorityClass(notification.priority)} ${notification.read ? 'read' : 'unread'}`,\n          onClick: () => handleNotificationClick(notification),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-icon\",\n            children: notification.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-title\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-message\",\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-timestamp\",\n              children: formatTimestamp(notification.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unread-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 42\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), notifications.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-all-btn\",\n          children: \"View All Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"INzDDUsr3+yjy7avs6BGTrkMYYk=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Notification","lowAttendanceAlert","mealWindows","lastUpdated","refreshMessage","newStudentRegistrations","onMarkAsRead","onClearAll","_s","isOpen","setIsOpen","notifications","setNotifications","unreadCount","setUnreadCount","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","newNotifications","currentTime","Date","push","id","type","icon","title","message","percentage","threshold","timestamp","priority","read","Object","entries","forEach","mealType","window","enabled","startHour","startMinute","startTime","split","map","Number","endHour","endMinute","endTime","setHours","timeUntilStart","charAt","toUpperCase","slice","Math","ceil","timeUntilEnd","includes","student","index","name","registeredAt","priorityOrder","high","medium","low","sort","a","b","filter","n","length","handleNotificationClick","notification","handleClearAll","formatTimestamp","now","notificationTime","diffInMinutes","floor","toLocaleDateString","getPriorityClass","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Intern/src/components/Notification.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Notification.css';\n\nconst Notification = ({ \n  lowAttendanceAlert, \n  mealWindows, \n  lastUpdated, \n  refreshMessage,\n  newStudentRegistrations = [],\n  onMarkAsRead,\n  onClearAll \n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const dropdownRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Generate notifications based on props\n  useEffect(() => {\n    const newNotifications = [];\n    const currentTime = new Date();\n\n    // Low Attendance Alerts\n    if (lowAttendanceAlert) {\n      newNotifications.push({\n        id: 'low-attendance',\n        type: 'alert',\n        icon: '🚨',\n        title: 'Low Attendance Alert',\n        message: `Attendance is ${lowAttendanceAlert.percentage}% - below ${lowAttendanceAlert.threshold}% threshold`,\n        timestamp: new Date(),\n        priority: 'high',\n        read: false\n      });\n    }\n\n    // Meal Window Reminders\n    Object.entries(mealWindows).forEach(([mealType, window]) => {\n      if (!window.enabled) return;\n\n      const [startHour, startMinute] = window.startTime.split(':').map(Number);\n      const [endHour, endMinute] = window.endTime.split(':').map(Number);\n      \n      const startTime = new Date();\n      startTime.setHours(startHour, startMinute, 0, 0);\n      \n      const endTime = new Date();\n      endTime.setHours(endHour, endMinute, 0, 0);\n\n      // Check if meal window is starting soon (30 minutes before)\n      const timeUntilStart = startTime - currentTime;\n      if (timeUntilStart > 0 && timeUntilStart <= 30 * 60 * 1000) {\n        newNotifications.push({\n          id: `meal-start-${mealType}`,\n          type: 'reminder',\n          icon: '⏰',\n          title: 'Meal Window Opening',\n          message: `${mealType.charAt(0).toUpperCase() + mealType.slice(1)} window opens in ${Math.ceil(timeUntilStart / (60 * 1000))} minutes`,\n          timestamp: new Date(),\n          priority: 'medium',\n          read: false\n        });\n      }\n\n      // Check if meal window is ending soon (15 minutes before end)\n      const timeUntilEnd = endTime - currentTime;\n      if (timeUntilEnd > 0 && timeUntilEnd <= 15 * 60 * 1000 && currentTime >= startTime) {\n        newNotifications.push({\n          id: `meal-end-${mealType}`,\n          type: 'reminder',\n          icon: '⏰',\n          title: 'Meal Window Closing',\n          message: `${mealType.charAt(0).toUpperCase() + mealType.slice(1)} window closes in ${Math.ceil(timeUntilEnd / (60 * 1000))} minutes`,\n          timestamp: new Date(),\n          priority: 'high',\n          read: false\n        });\n      }\n    });\n\n    // Data Sync Updates\n    if (refreshMessage && refreshMessage.includes('✅')) {\n      newNotifications.push({\n        id: 'data-sync',\n        type: 'update',\n        icon: '🔄',\n        title: 'Data Sync Complete',\n        message: `Dashboard data refreshed at ${lastUpdated}`,\n        timestamp: new Date(),\n        priority: 'low',\n        read: false\n      });\n    }\n\n    // New Student Registrations\n    newStudentRegistrations.forEach((student, index) => {\n      newNotifications.push({\n        id: `new-student-${student.id || index}`,\n        type: 'info',\n        icon: '👥',\n        title: 'New Student Registered',\n        message: `${student.name} (${student.id}) has been added to the system`,\n        timestamp: student.registeredAt || new Date(),\n        priority: 'medium',\n        read: false\n      });\n    });\n\n    // Sort by priority and timestamp\n    const priorityOrder = { high: 3, medium: 2, low: 1 };\n    newNotifications.sort((a, b) => {\n      if (priorityOrder[a.priority] !== priorityOrder[b.priority]) {\n        return priorityOrder[b.priority] - priorityOrder[a.priority];\n      }\n      return new Date(b.timestamp) - new Date(a.timestamp);\n    });\n\n    setNotifications(newNotifications);\n    setUnreadCount(newNotifications.filter(n => !n.read).length);\n  }, [lowAttendanceAlert, mealWindows, refreshMessage, lastUpdated, newStudentRegistrations]);\n\n  const handleNotificationClick = (notification) => {\n    if (!notification.read && onMarkAsRead) {\n      onMarkAsRead(notification.id);\n    }\n  };\n\n  const handleClearAll = () => {\n    if (onClearAll) {\n      onClearAll();\n    }\n    setNotifications([]);\n    setUnreadCount(0);\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const now = new Date();\n    const notificationTime = new Date(timestamp);\n    const diffInMinutes = Math.floor((now - notificationTime) / (1000 * 60));\n\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return notificationTime.toLocaleDateString();\n  };\n\n  const getPriorityClass = (priority) => {\n    switch (priority) {\n      case 'high': return 'notification-high';\n      case 'medium': return 'notification-medium';\n      case 'low': return 'notification-low';\n      default: return '';\n    }\n  };\n\n  return (\n    <div className=\"notification-container\" ref={dropdownRef}>\n      <button \n        className={`notification-bell ${unreadCount > 0 ? 'has-notifications' : ''}`}\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Notifications\"\n      >\n        <span className=\"bell-icon\">🔔</span>\n        {unreadCount > 0 && (\n          <span className=\"notification-badge\">{unreadCount > 99 ? '99+' : unreadCount}</span>\n        )}\n      </button>\n\n      {isOpen && (\n        <div className=\"notification-dropdown\">\n          <div className=\"notification-header\">\n            <h3>Notifications</h3>\n            {notifications.length > 0 && (\n              <button \n                className=\"clear-all-btn\"\n                onClick={handleClearAll}\n              >\n                Clear All\n              </button>\n            )}\n          </div>\n\n          <div className=\"notification-list\">\n            {notifications.length === 0 ? (\n              <div className=\"no-notifications\">\n                <span className=\"no-notifications-icon\">🔕</span>\n                <p>No new notifications</p>\n              </div>\n            ) : (\n              notifications.map((notification) => (\n                <div\n                  key={notification.id}\n                  className={`notification-item ${getPriorityClass(notification.priority)} ${notification.read ? 'read' : 'unread'}`}\n                  onClick={() => handleNotificationClick(notification)}\n                >\n                  <div className=\"notification-icon\">\n                    {notification.icon}\n                  </div>\n                  <div className=\"notification-content\">\n                    <div className=\"notification-title\">{notification.title}</div>\n                    <div className=\"notification-message\">{notification.message}</div>\n                    <div className=\"notification-timestamp\">\n                      {formatTimestamp(notification.timestamp)}\n                    </div>\n                  </div>\n                  {!notification.read && <div className=\"unread-indicator\"></div>}\n                </div>\n              ))\n            )}\n          </div>\n\n          {notifications.length > 5 && (\n            <div className=\"notification-footer\">\n              <button className=\"view-all-btn\">\n                View All Notifications\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Notification;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EACpBC,kBAAkB;EAClBC,WAAW;EACXC,WAAW;EACXC,cAAc;EACdC,uBAAuB,GAAG,EAAE;EAC5BC,YAAY;EACZC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMoB,WAAW,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMoB,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIF,WAAW,CAACG,OAAO,IAAI,CAACH,WAAW,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtEV,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IAEDW,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApB,SAAS,CAAC,MAAM;IACd,MAAM4B,gBAAgB,GAAG,EAAE;IAC3B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;;IAE9B;IACA,IAAIzB,kBAAkB,EAAE;MACtBuB,gBAAgB,CAACG,IAAI,CAAC;QACpBC,EAAE,EAAE,gBAAgB;QACpBC,IAAI,EAAE,OAAO;QACbC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,sBAAsB;QAC7BC,OAAO,EAAE,iBAAiB/B,kBAAkB,CAACgC,UAAU,aAAahC,kBAAkB,CAACiC,SAAS,aAAa;QAC7GC,SAAS,EAAE,IAAIT,IAAI,CAAC,CAAC;QACrBU,QAAQ,EAAE,MAAM;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;;IAEA;IACAC,MAAM,CAACC,OAAO,CAACrC,WAAW,CAAC,CAACsC,OAAO,CAAC,CAAC,CAACC,QAAQ,EAAEC,MAAM,CAAC,KAAK;MAC1D,IAAI,CAACA,MAAM,CAACC,OAAO,EAAE;MAErB,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGH,MAAM,CAACI,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MACxE,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGT,MAAM,CAACU,OAAO,CAACL,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MAElE,MAAMH,SAAS,GAAG,IAAIpB,IAAI,CAAC,CAAC;MAC5BoB,SAAS,CAACO,QAAQ,CAACT,SAAS,EAAEC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;MAEhD,MAAMO,OAAO,GAAG,IAAI1B,IAAI,CAAC,CAAC;MAC1B0B,OAAO,CAACC,QAAQ,CAACH,OAAO,EAAEC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;;MAE1C;MACA,MAAMG,cAAc,GAAGR,SAAS,GAAGrB,WAAW;MAC9C,IAAI6B,cAAc,GAAG,CAAC,IAAIA,cAAc,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE;QAC1D9B,gBAAgB,CAACG,IAAI,CAAC;UACpBC,EAAE,EAAE,cAAca,QAAQ,EAAE;UAC5BZ,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE,GAAG;UACTC,KAAK,EAAE,qBAAqB;UAC5BC,OAAO,EAAE,GAAGS,QAAQ,CAACc,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGf,QAAQ,CAACgB,KAAK,CAAC,CAAC,CAAC,oBAAoBC,IAAI,CAACC,IAAI,CAACL,cAAc,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,UAAU;UACrInB,SAAS,EAAE,IAAIT,IAAI,CAAC,CAAC;UACrBU,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;;MAEA;MACA,MAAMuB,YAAY,GAAGR,OAAO,GAAG3B,WAAW;MAC1C,IAAImC,YAAY,GAAG,CAAC,IAAIA,YAAY,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,IAAInC,WAAW,IAAIqB,SAAS,EAAE;QAClFtB,gBAAgB,CAACG,IAAI,CAAC;UACpBC,EAAE,EAAE,YAAYa,QAAQ,EAAE;UAC1BZ,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE,GAAG;UACTC,KAAK,EAAE,qBAAqB;UAC5BC,OAAO,EAAE,GAAGS,QAAQ,CAACc,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGf,QAAQ,CAACgB,KAAK,CAAC,CAAC,CAAC,qBAAqBC,IAAI,CAACC,IAAI,CAACC,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,UAAU;UACpIzB,SAAS,EAAE,IAAIT,IAAI,CAAC,CAAC;UACrBU,QAAQ,EAAE,MAAM;UAChBC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;;IAEF;IACA,IAAIjC,cAAc,IAAIA,cAAc,CAACyD,QAAQ,CAAC,GAAG,CAAC,EAAE;MAClDrC,gBAAgB,CAACG,IAAI,CAAC;QACpBC,EAAE,EAAE,WAAW;QACfC,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,oBAAoB;QAC3BC,OAAO,EAAE,+BAA+B7B,WAAW,EAAE;QACrDgC,SAAS,EAAE,IAAIT,IAAI,CAAC,CAAC;QACrBU,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;;IAEA;IACAhC,uBAAuB,CAACmC,OAAO,CAAC,CAACsB,OAAO,EAAEC,KAAK,KAAK;MAClDvC,gBAAgB,CAACG,IAAI,CAAC;QACpBC,EAAE,EAAE,eAAekC,OAAO,CAAClC,EAAE,IAAImC,KAAK,EAAE;QACxClC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,wBAAwB;QAC/BC,OAAO,EAAE,GAAG8B,OAAO,CAACE,IAAI,KAAKF,OAAO,CAAClC,EAAE,gCAAgC;QACvEO,SAAS,EAAE2B,OAAO,CAACG,YAAY,IAAI,IAAIvC,IAAI,CAAC,CAAC;QAC7CU,QAAQ,EAAE,QAAQ;QAClBC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAM6B,aAAa,GAAG;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC;IACpD7C,gBAAgB,CAAC8C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC9B,IAAIN,aAAa,CAACK,CAAC,CAACnC,QAAQ,CAAC,KAAK8B,aAAa,CAACM,CAAC,CAACpC,QAAQ,CAAC,EAAE;QAC3D,OAAO8B,aAAa,CAACM,CAAC,CAACpC,QAAQ,CAAC,GAAG8B,aAAa,CAACK,CAAC,CAACnC,QAAQ,CAAC;MAC9D;MACA,OAAO,IAAIV,IAAI,CAAC8C,CAAC,CAACrC,SAAS,CAAC,GAAG,IAAIT,IAAI,CAAC6C,CAAC,CAACpC,SAAS,CAAC;IACtD,CAAC,CAAC;IAEFvB,gBAAgB,CAACY,gBAAgB,CAAC;IAClCV,cAAc,CAACU,gBAAgB,CAACiD,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACrC,IAAI,CAAC,CAACsC,MAAM,CAAC;EAC9D,CAAC,EAAE,CAAC1E,kBAAkB,EAAEC,WAAW,EAAEE,cAAc,EAAED,WAAW,EAAEE,uBAAuB,CAAC,CAAC;EAE3F,MAAMuE,uBAAuB,GAAIC,YAAY,IAAK;IAChD,IAAI,CAACA,YAAY,CAACxC,IAAI,IAAI/B,YAAY,EAAE;MACtCA,YAAY,CAACuE,YAAY,CAACjD,EAAE,CAAC;IAC/B;EACF,CAAC;EAED,MAAMkD,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIvE,UAAU,EAAE;MACdA,UAAU,CAAC,CAAC;IACd;IACAK,gBAAgB,CAAC,EAAE,CAAC;IACpBE,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMiE,eAAe,GAAI5C,SAAS,IAAK;IACrC,MAAM6C,GAAG,GAAG,IAAItD,IAAI,CAAC,CAAC;IACtB,MAAMuD,gBAAgB,GAAG,IAAIvD,IAAI,CAACS,SAAS,CAAC;IAC5C,MAAM+C,aAAa,GAAGxB,IAAI,CAACyB,KAAK,CAAC,CAACH,GAAG,GAAGC,gBAAgB,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC;IAExE,IAAIC,aAAa,GAAG,CAAC,EAAE,OAAO,UAAU;IACxC,IAAIA,aAAa,GAAG,EAAE,EAAE,OAAO,GAAGA,aAAa,OAAO;IACtD,IAAIA,aAAa,GAAG,IAAI,EAAE,OAAO,GAAGxB,IAAI,CAACyB,KAAK,CAACD,aAAa,GAAG,EAAE,CAAC,OAAO;IACzE,OAAOD,gBAAgB,CAACG,kBAAkB,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMC,gBAAgB,GAAIjD,QAAQ,IAAK;IACrC,QAAQA,QAAQ;MACd,KAAK,MAAM;QAAE,OAAO,mBAAmB;MACvC,KAAK,QAAQ;QAAE,OAAO,qBAAqB;MAC3C,KAAK,KAAK;QAAE,OAAO,kBAAkB;MACrC;QAAS,OAAO,EAAE;IACpB;EACF,CAAC;EAED,oBACErC,OAAA;IAAKuF,SAAS,EAAC,wBAAwB;IAACC,GAAG,EAAExE,WAAY;IAAAyE,QAAA,gBACvDzF,OAAA;MACEuF,SAAS,EAAE,qBAAqBzE,WAAW,GAAG,CAAC,GAAG,mBAAmB,GAAG,EAAE,EAAG;MAC7E4E,OAAO,EAAEA,CAAA,KAAM/E,SAAS,CAAC,CAACD,MAAM,CAAE;MAClC,cAAW,eAAe;MAAA+E,QAAA,gBAE1BzF,OAAA;QAAMuF,SAAS,EAAC,WAAW;QAAAE,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACpChF,WAAW,GAAG,CAAC,iBACdd,OAAA;QAAMuF,SAAS,EAAC,oBAAoB;QAAAE,QAAA,EAAE3E,WAAW,GAAG,EAAE,GAAG,KAAK,GAAGA;MAAW;QAAA6E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACpF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,EAERpF,MAAM,iBACLV,OAAA;MAAKuF,SAAS,EAAC,uBAAuB;MAAAE,QAAA,gBACpCzF,OAAA;QAAKuF,SAAS,EAAC,qBAAqB;QAAAE,QAAA,gBAClCzF,OAAA;UAAAyF,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACrBlF,aAAa,CAACgE,MAAM,GAAG,CAAC,iBACvB5E,OAAA;UACEuF,SAAS,EAAC,eAAe;UACzBG,OAAO,EAAEX,cAAe;UAAAU,QAAA,EACzB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN9F,OAAA;QAAKuF,SAAS,EAAC,mBAAmB;QAAAE,QAAA,EAC/B7E,aAAa,CAACgE,MAAM,KAAK,CAAC,gBACzB5E,OAAA;UAAKuF,SAAS,EAAC,kBAAkB;UAAAE,QAAA,gBAC/BzF,OAAA;YAAMuF,SAAS,EAAC,uBAAuB;YAAAE,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjD9F,OAAA;YAAAyF,QAAA,EAAG;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,GAENlF,aAAa,CAACqC,GAAG,CAAE6B,YAAY,iBAC7B9E,OAAA;UAEEuF,SAAS,EAAE,qBAAqBD,gBAAgB,CAACR,YAAY,CAACzC,QAAQ,CAAC,IAAIyC,YAAY,CAACxC,IAAI,GAAG,MAAM,GAAG,QAAQ,EAAG;UACnHoD,OAAO,EAAEA,CAAA,KAAMb,uBAAuB,CAACC,YAAY,CAAE;UAAAW,QAAA,gBAErDzF,OAAA;YAAKuF,SAAS,EAAC,mBAAmB;YAAAE,QAAA,EAC/BX,YAAY,CAAC/C;UAAI;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACN9F,OAAA;YAAKuF,SAAS,EAAC,sBAAsB;YAAAE,QAAA,gBACnCzF,OAAA;cAAKuF,SAAS,EAAC,oBAAoB;cAAAE,QAAA,EAAEX,YAAY,CAAC9C;YAAK;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9D9F,OAAA;cAAKuF,SAAS,EAAC,sBAAsB;cAAAE,QAAA,EAAEX,YAAY,CAAC7C;YAAO;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClE9F,OAAA;cAAKuF,SAAS,EAAC,wBAAwB;cAAAE,QAAA,EACpCT,eAAe,CAACF,YAAY,CAAC1C,SAAS;YAAC;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACL,CAAChB,YAAY,CAACxC,IAAI,iBAAItC,OAAA;YAAKuF,SAAS,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAd1DhB,YAAY,CAACjD,EAAE;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAejB,CACN;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELlF,aAAa,CAACgE,MAAM,GAAG,CAAC,iBACvB5E,OAAA;QAAKuF,SAAS,EAAC,qBAAqB;QAAAE,QAAA,eAClCzF,OAAA;UAAQuF,SAAS,EAAC,cAAc;UAAAE,QAAA,EAAC;QAEjC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrF,EAAA,CAvOIR,YAAY;AAAA8F,EAAA,GAAZ9F,YAAY;AAyOlB,eAAeA,YAAY;AAAC,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}