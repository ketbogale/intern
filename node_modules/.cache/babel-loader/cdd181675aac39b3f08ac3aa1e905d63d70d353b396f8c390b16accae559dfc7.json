{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Intern\\\\src\\\\components\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './AttendancePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendancePage = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [student, setStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [mealWindowBlocked, setMealWindowBlocked] = useState(false);\n  const [nextMealInfo, setNextMealInfo] = useState('');\n  const [mealWindows, setMealWindows] = useState({\n    breakfast: {\n      startTime: '07:00',\n      endTime: '09:00',\n      beforeWindow: 30,\n      afterWindow: 30,\n      enabled: true\n    },\n    lunch: {\n      startTime: '12:00',\n      endTime: '14:00',\n      beforeWindow: 30,\n      afterWindow: 30,\n      enabled: true\n    },\n    dinner: {\n      startTime: '16:55',\n      endTime: '20:00',\n      beforeWindow: 30,\n      afterWindow: 30,\n      enabled: true\n    }\n  });\n  const inputRef = useRef(null);\n  const successAudioRef = useRef(null);\n  const errorAudioRef = useRef(null);\n\n  // Fetch meal windows from server\n  const fetchMealWindows = async () => {\n    try {\n      console.log('Fetching meal windows from API...');\n      const response = await fetch('/api/meal-windows');\n      if (response.ok) {\n        const data = await response.json();\n        console.log('API Response:', data);\n        if (data.success && data.mealWindows) {\n          console.log('Setting meal windows:', data.mealWindows);\n          setMealWindows(data.mealWindows);\n        } else {\n          console.error('Invalid API response structure:', data);\n        }\n      } else {\n        console.error('API request failed:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching meal windows:', error);\n    }\n  };\n\n  // Meal window timing logic\n  const checkMealWindow = () => {\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n\n    // Convert meal windows to minutes format\n    const mealWindowsInMinutes = {};\n    Object.entries(mealWindows).forEach(([mealType, config]) => {\n      if (config.enabled) {\n        const [startHour, startMinute] = config.startTime.split(':').map(Number);\n        const [endHour, endMinute] = config.endTime.split(':').map(Number);\n        mealWindowsInMinutes[mealType] = {\n          start: startHour * 60 + startMinute,\n          end: endHour * 60 + endMinute\n        };\n      }\n    });\n    let isInMealWindow = false;\n    let nextMealType = '';\n    let timeUntilOpen = null;\n\n    // Check if currently in any meal window\n    for (const [meal, window] of Object.entries(mealWindowsInMinutes)) {\n      if (currentTime >= window.start && currentTime <= window.end) {\n        isInMealWindow = true;\n        break;\n      }\n    }\n\n    // Find next meal window if not currently in one\n    if (!isInMealWindow) {\n      for (const [meal, window] of Object.entries(mealWindowsInMinutes)) {\n        if (currentTime < window.start) {\n          nextMealType = meal;\n          timeUntilOpen = window.start - currentTime;\n          break;\n        }\n      }\n\n      // If no meal today, next is breakfast tomorrow\n      if (!nextMealType) {\n        const breakfastWindow = mealWindowsInMinutes.breakfast;\n        if (breakfastWindow) {\n          nextMealType = 'breakfast';\n          timeUntilOpen = breakfastWindow.start + 24 * 60 - currentTime;\n        }\n      }\n    }\n    setMealWindowBlocked(!isInMealWindow);\n    if (timeUntilOpen) {\n      const hours = Math.floor(timeUntilOpen / 60);\n      const minutes = timeUntilOpen % 60;\n      const nextWindowTime = new Date();\n      nextWindowTime.setMinutes(nextWindowTime.getMinutes() + timeUntilOpen);\n      const timeString = nextWindowTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      let timeText;\n      if (hours > 0) {\n        timeText = `${hours}h ${minutes}m (${timeString})`;\n      } else {\n        timeText = `${minutes}m (${timeString})`;\n      }\n      setNextMealInfo(`${nextMealType.charAt(0).toUpperCase() + nextMealType.slice(1)} window opens in ${timeText}`);\n    }\n  };\n  useEffect(() => {\n    // Focus on input when component mounts\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n\n    // Fetch meal windows from server\n    fetchMealWindows();\n\n    // Check meal window status\n    checkMealWindow();\n    const interval = setInterval(checkMealWindow, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Re-check meal window when mealWindows state changes\n  useEffect(() => {\n    checkMealWindow();\n  }, [mealWindows]);\n  const playSound = isSuccess => {\n    try {\n      if (isSuccess && successAudioRef.current) {\n        successAudioRef.current.play();\n      } else if (!isSuccess && errorAudioRef.current) {\n        errorAudioRef.current.play();\n      }\n    } catch (error) {\n      console.log('Audio playback failed:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!studentId.trim()) return;\n\n    // Check if meal window is blocked\n    if (mealWindowBlocked) {\n      setMessage(`❌ Attendance blocked: ${nextMealInfo}`);\n      playSound(false);\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setStudent(null);\n    try {\n      const response = await fetch('/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          studentId: studentId.trim()\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setStudent(data.student);\n        setStatus(data.status);\n        switch (data.status) {\n          case 'allowed':\n            setMessage('✅ Meal allowed! Welcome!');\n            playSound(true);\n            break;\n          case 'already_used':\n            setMessage('❌ Meal already used for this period');\n            playSound(false);\n            break;\n          case 'invalid':\n            setMessage('❌ Student ID not found');\n            playSound(false);\n            break;\n          default:\n            setMessage('❌ Unknown status');\n            playSound(false);\n        }\n      } else {\n        setMessage('❌ System error. Please try again.');\n        playSound(false);\n      }\n    } catch (error) {\n      setMessage('❌ Network error. Please check connection.');\n      playSound(false);\n    } finally {\n      setIsLoading(false);\n      setStudentId('');\n      // Refocus input for next scan\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', {\n        method: 'POST'\n      });\n      onLogout();\n    } catch (error) {\n      console.error('Logout error:', error);\n      onLogout(); // Logout anyway\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/salale_university_logo.png\",\n          alt: \"Salale University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Salale University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sign-out-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attendance-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-card\",\n            children: [mealWindowBlocked && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-window-warning\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-clock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: nextMealInfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"studentId\",\n                children: \"Student ID (Manual or Scan Barcode):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: inputRef,\n                type: \"text\",\n                id: \"studentId\",\n                value: studentId,\n                onChange: e => setStudentId(e.target.value),\n                placeholder: mealWindowBlocked ? \"Meal window closed\" : \"Enter ID\",\n                autoComplete: \"off\",\n                disabled: mealWindowBlocked,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"check-btn\",\n                disabled: isLoading || mealWindowBlocked,\n                children: mealWindowBlocked ? 'Meal Window Closed' : isLoading ? 'Checking...' : 'Check Attendance'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `attendance-message ${status}`,\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-section\",\n          children: student && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-message ${status}`,\n              children: status === 'allowed' ? '✅ ALLOWED' : status === 'already_used' ? '❌ ALREADY USED' : '❌ DENIED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 26\n                  }, this), \" \", student.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"ID Number:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 26\n                  }, this), \" \", student.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Program:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 26\n                  }, this), \" \", student.department]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-photo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: student.photoUrl || '/images/default-student.png',\n                  alt: \"Student Photo\",\n                  onError: e => {\n                    e.target.src = '/images/default-student.png';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: successAudioRef,\n      preload: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/sounds/success.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: errorAudioRef,\n      preload: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/sounds/error.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"ykCliHwYUc+tEpeJCf8Xir7N5e4=\");\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","AttendancePage","user","onLogout","_s","studentId","setStudentId","student","setStudent","message","setMessage","status","setStatus","isLoading","setIsLoading","mealWindowBlocked","setMealWindowBlocked","nextMealInfo","setNextMealInfo","mealWindows","setMealWindows","breakfast","startTime","endTime","beforeWindow","afterWindow","enabled","lunch","dinner","inputRef","successAudioRef","errorAudioRef","fetchMealWindows","console","log","response","fetch","ok","data","json","success","error","statusText","checkMealWindow","now","Date","currentTime","getHours","getMinutes","mealWindowsInMinutes","Object","entries","forEach","mealType","config","startHour","startMinute","split","map","Number","endHour","endMinute","start","end","isInMealWindow","nextMealType","timeUntilOpen","meal","window","breakfastWindow","hours","Math","floor","minutes","nextWindowTime","setMinutes","timeString","toLocaleTimeString","hour","minute","timeText","charAt","toUpperCase","slice","current","focus","interval","setInterval","clearInterval","playSound","isSuccess","play","handleSubmit","e","preventDefault","trim","method","headers","body","JSON","stringify","setTimeout","handleLogout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","ref","type","id","value","onChange","target","placeholder","autoComplete","disabled","required","name","department","photoUrl","onError","preload","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Intern/src/components/AttendancePage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './AttendancePage.css';\n\nconst AttendancePage = ({ user, onLogout }) => {\n  const [studentId, setStudentId] = useState('');\n  const [student, setStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [mealWindowBlocked, setMealWindowBlocked] = useState(false);\n  const [nextMealInfo, setNextMealInfo] = useState('');\n  const [mealWindows, setMealWindows] = useState({\n    breakfast: { startTime: '07:00', endTime: '09:00', beforeWindow: 30, afterWindow: 30, enabled: true },\n    lunch: { startTime: '12:00', endTime: '14:00', beforeWindow: 30, afterWindow: 30, enabled: true },\n    dinner: { startTime: '16:55', endTime: '20:00', beforeWindow: 30, afterWindow: 30, enabled: true }\n  });\n  const inputRef = useRef(null);\n  const successAudioRef = useRef(null);\n  const errorAudioRef = useRef(null);\n\n  // Fetch meal windows from server\n  const fetchMealWindows = async () => {\n    try {\n      console.log('Fetching meal windows from API...');\n      const response = await fetch('/api/meal-windows');\n      if (response.ok) {\n        const data = await response.json();\n        console.log('API Response:', data);\n        if (data.success && data.mealWindows) {\n          console.log('Setting meal windows:', data.mealWindows);\n          setMealWindows(data.mealWindows);\n        } else {\n          console.error('Invalid API response structure:', data);\n        }\n      } else {\n        console.error('API request failed:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching meal windows:', error);\n    }\n  };\n\n  // Meal window timing logic\n  const checkMealWindow = () => {\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n    \n    // Convert meal windows to minutes format\n    const mealWindowsInMinutes = {};\n    Object.entries(mealWindows).forEach(([mealType, config]) => {\n      if (config.enabled) {\n        const [startHour, startMinute] = config.startTime.split(':').map(Number);\n        const [endHour, endMinute] = config.endTime.split(':').map(Number);\n        mealWindowsInMinutes[mealType] = {\n          start: startHour * 60 + startMinute,\n          end: endHour * 60 + endMinute\n        };\n      }\n    });\n    \n    let isInMealWindow = false;\n    let nextMealType = '';\n    let timeUntilOpen = null;\n    \n    // Check if currently in any meal window\n    for (const [meal, window] of Object.entries(mealWindowsInMinutes)) {\n      if (currentTime >= window.start && currentTime <= window.end) {\n        isInMealWindow = true;\n        break;\n      }\n    }\n    \n    // Find next meal window if not currently in one\n    if (!isInMealWindow) {\n      for (const [meal, window] of Object.entries(mealWindowsInMinutes)) {\n        if (currentTime < window.start) {\n          nextMealType = meal;\n          timeUntilOpen = window.start - currentTime;\n          break;\n        }\n      }\n      \n      // If no meal today, next is breakfast tomorrow\n      if (!nextMealType) {\n        const breakfastWindow = mealWindowsInMinutes.breakfast;\n        if (breakfastWindow) {\n          nextMealType = 'breakfast';\n          timeUntilOpen = breakfastWindow.start + (24 * 60) - currentTime;\n        }\n      }\n    }\n    \n    setMealWindowBlocked(!isInMealWindow);\n    \n    if (timeUntilOpen) {\n      const hours = Math.floor(timeUntilOpen / 60);\n      const minutes = timeUntilOpen % 60;\n      const nextWindowTime = new Date();\n      nextWindowTime.setMinutes(nextWindowTime.getMinutes() + timeUntilOpen);\n      const timeString = nextWindowTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n      \n      let timeText;\n      if (hours > 0) {\n        timeText = `${hours}h ${minutes}m (${timeString})`;\n      } else {\n        timeText = `${minutes}m (${timeString})`;\n      }\n      \n      setNextMealInfo(`${nextMealType.charAt(0).toUpperCase() + nextMealType.slice(1)} window opens in ${timeText}`);\n    }\n  };\n\n  useEffect(() => {\n    // Focus on input when component mounts\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    \n    // Fetch meal windows from server\n    fetchMealWindows();\n    \n    // Check meal window status\n    checkMealWindow();\n    const interval = setInterval(checkMealWindow, 60000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Re-check meal window when mealWindows state changes\n  useEffect(() => {\n    checkMealWindow();\n  }, [mealWindows]);\n\n  const playSound = (isSuccess) => {\n    try {\n      if (isSuccess && successAudioRef.current) {\n        successAudioRef.current.play();\n      } else if (!isSuccess && errorAudioRef.current) {\n        errorAudioRef.current.play();\n      }\n    } catch (error) {\n      console.log('Audio playback failed:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!studentId.trim()) return;\n\n    // Check if meal window is blocked\n    if (mealWindowBlocked) {\n      setMessage(`❌ Attendance blocked: ${nextMealInfo}`);\n      playSound(false);\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage('');\n    setStudent(null);\n\n    try {\n      const response = await fetch('/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ studentId: studentId.trim() }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setStudent(data.student);\n        setStatus(data.status);\n\n        switch (data.status) {\n          case 'allowed':\n            setMessage('✅ Meal allowed! Welcome!');\n            playSound(true);\n            break;\n          case 'already_used':\n            setMessage('❌ Meal already used for this period');\n            playSound(false);\n            break;\n          case 'invalid':\n            setMessage('❌ Student ID not found');\n            playSound(false);\n            break;\n          default:\n            setMessage('❌ Unknown status');\n            playSound(false);\n        }\n      } else {\n        setMessage('❌ System error. Please try again.');\n        playSound(false);\n      }\n    } catch (error) {\n      setMessage('❌ Network error. Please check connection.');\n      playSound(false);\n    } finally {\n      setIsLoading(false);\n      setStudentId('');\n      // Refocus input for next scan\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', { method: 'POST' });\n      onLogout();\n    } catch (error) {\n      console.error('Logout error:', error);\n      onLogout(); // Logout anyway\n    }\n  };\n\n  return (\n    <div className=\"attendance-container\">\n      <div className=\"attendance-header\">\n        <div className=\"header-left\">\n          <img src=\"/images/salale_university_logo.png\" alt=\"Salale University\" />\n          <h1>Salale University</h1>\n        </div>\n        <button onClick={handleLogout} className=\"logout-btn\">\n          <i className=\"fas fa-sign-out-alt\"></i>\n          Logout\n        </button>\n      </div>\n\n      <div className=\"attendance-content\">\n        <div className=\"attendance-layout\">\n          {/* Left side: Input form */}\n          <div className=\"input-section\">\n            <div className=\"input-card\">\n              {mealWindowBlocked && (\n                <div className=\"meal-window-warning\">\n                  <i className=\"fas fa-clock\"></i>\n                  <span>{nextMealInfo}</span>\n                </div>\n              )}\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"studentId\">Student ID (Manual or Scan Barcode):</label>\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  id=\"studentId\"\n                  value={studentId}\n                  onChange={(e) => setStudentId(e.target.value)}\n                  placeholder={mealWindowBlocked ? \"Meal window closed\" : \"Enter ID\"}\n                  autoComplete=\"off\"\n                  disabled={mealWindowBlocked}\n                  required\n                />\n                <button type=\"submit\" className=\"check-btn\" disabled={isLoading || mealWindowBlocked}>\n                  {mealWindowBlocked ? 'Meal Window Closed' : isLoading ? 'Checking...' : 'Check Attendance'}\n                </button>\n              </form>\n\n              {message && (\n                <div className={`attendance-message ${status}`}>\n                  {message}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right side: Student information */}\n          <div className=\"result-section\">\n            {student && (\n              <div className=\"student-card\">\n                <div className={`status-message ${status}`}>\n                  {status === 'allowed' ? '✅ ALLOWED' : \n                   status === 'already_used' ? '❌ ALREADY USED' : \n                   '❌ DENIED'}\n                </div>\n                <div className=\"student-info-row\">\n                  <div className=\"student-details\">\n                    <div><strong>Name:</strong> {student.name}</div>\n                    <div><strong>ID Number:</strong> {student.id}</div>\n                    <div><strong>Program:</strong> {student.department}</div>\n                  </div>\n                    \n                  <div className=\"student-photo\">\n                    <img \n                      src={student.photoUrl || '/images/default-student.png'} \n                      alt=\"Student Photo\"\n                      onError={(e) => {\n                        e.target.src = '/images/default-student.png';\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Audio elements */}\n      <audio ref={successAudioRef} preload=\"auto\">\n        <source src=\"/sounds/success.mp3\" type=\"audio/mpeg\" />\n      </audio>\n      <audio ref={errorAudioRef} preload=\"auto\">\n        <source src=\"/sounds/error.mp3\" type=\"audio/mpeg\" />\n      </audio>\n    </div>\n  );\n};\n\nexport default AttendancePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}