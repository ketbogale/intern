{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Intern\\\\src\\\\components\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './AttendancePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendancePage = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [student, setStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [mealWindowBlocked, setMealWindowBlocked] = useState(false);\n  const [nextMealInfo, setNextMealInfo] = useState('');\n  const [countdownMinutes, setCountdownMinutes] = useState(0);\n  const [mealWindows, setMealWindows] = useState({});\n  const inputRef = useRef(null);\n  const successAudioRef = useRef(null);\n  const errorAudioRef = useRef(null);\n\n  // Fetch meal windows from server\n  const fetchMealWindows = async () => {\n    try {\n      console.log('🔄 Fetching meal windows from API...');\n      const response = await fetch('/api/meal-windows');\n      if (response.ok) {\n        const data = await response.json();\n        console.log('📥 API Response:', data);\n        if (data.success && data.mealWindows) {\n          console.log('✅ Setting meal windows from database:', data.mealWindows);\n          console.log('🕐 Current time:', new Date().toLocaleTimeString());\n\n          // Log each meal window with its timing\n          Object.entries(data.mealWindows).forEach(([mealType, config]) => {\n            if (config.enabled) {\n              console.log(`📋 ${mealType}: ${config.startTime}-${config.endTime} (±${config.beforeWindow}/${config.afterWindow}min)`);\n            }\n          });\n          setMealWindows(data.mealWindows);\n        } else {\n          console.error('❌ Invalid API response structure:', data);\n        }\n      } else {\n        console.error('❌ API request failed:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('❌ Error fetching meal windows:', error);\n    }\n  };\n\n  // Meal window timing logic\n  const checkMealWindow = useCallback(() => {\n    // Don't process if meal windows haven't been loaded from database yet\n    if (Object.keys(mealWindows).length === 0) {\n      console.log('⏳ Meal windows not loaded yet, skipping check');\n      setMealWindowBlocked(true);\n      return;\n    }\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n    console.log(`🕐 Current time: ${Math.floor(currentTime / 60)}:${(currentTime % 60).toString().padStart(2, '0')} (${currentTime} minutes)`);\n\n    // Convert meal windows to minutes format with before/after buffers\n    const mealWindowsInMinutes = {};\n    Object.entries(mealWindows).forEach(([mealType, config]) => {\n      if (config.enabled) {\n        const [startHour, startMinute] = config.startTime.split(':').map(Number);\n        const [endHour, endMinute] = config.endTime.split(':').map(Number);\n        const startTime = startHour * 60 + startMinute;\n        const endTime = endHour * 60 + endMinute;\n\n        // Allow scanning from startTime to endTime + afterWindow\n        const windowStart = startTime; // Start at actual meal start time\n        const windowEnd = endTime + (config.afterWindow || 30);\n        mealWindowsInMinutes[mealType] = {\n          start: windowStart,\n          end: windowEnd,\n          originalStart: startTime,\n          originalEnd: endTime\n        };\n        console.log(`📋 ${mealType}: Window ${Math.floor(windowStart / 60)}:${(windowStart % 60).toString().padStart(2, '0')}-${Math.floor(windowEnd / 60)}:${(windowEnd % 60).toString().padStart(2, '0')} (${windowStart}-${windowEnd})`);\n      }\n    });\n    let isInMealWindow = false;\n    let nextMealType = '';\n    let timeUntilOpen = null;\n\n    // Check if currently in any meal window (including buffers)\n    for (const [mealType, window] of Object.entries(mealWindowsInMinutes)) {\n      if (currentTime >= window.start && currentTime <= window.end) {\n        isInMealWindow = true;\n        console.log(`✅ Currently in ${mealType} window`);\n        break;\n      }\n    }\n    if (!isInMealWindow) {\n      console.log('❌ Not in any meal window - attendance blocked');\n    }\n\n    // Find next meal window if not currently in one\n    if (!isInMealWindow) {\n      for (const [meal, window] of Object.entries(mealWindowsInMinutes)) {\n        if (currentTime < window.start) {\n          nextMealType = meal;\n          timeUntilOpen = window.start - currentTime;\n          break;\n        }\n      }\n\n      // If no meal today, next is breakfast tomorrow\n      if (!nextMealType) {\n        const breakfastWindow = mealWindowsInMinutes.breakfast;\n        if (breakfastWindow) {\n          nextMealType = 'breakfast';\n          timeUntilOpen = breakfastWindow.start + 24 * 60 - currentTime;\n        }\n      }\n    }\n    setMealWindowBlocked(!isInMealWindow);\n    if (timeUntilOpen) {\n      const hours = Math.floor(timeUntilOpen / 60);\n      const minutes = timeUntilOpen % 60;\n      const nextWindowTime = new Date();\n      nextWindowTime.setMinutes(nextWindowTime.getMinutes() + timeUntilOpen);\n      const timeString = nextWindowTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      // Set countdown minutes for real-time display\n      setCountdownMinutes(timeUntilOpen);\n      let timeText;\n      if (hours > 0) {\n        timeText = `${hours}h ${minutes}m (${timeString})`;\n      } else {\n        timeText = `${minutes}m (${timeString})`;\n      }\n      setNextMealInfo(`${nextMealType.charAt(0).toUpperCase() + nextMealType.slice(1)} window opens in ${timeText}`);\n    } else {\n      setCountdownMinutes(0);\n    }\n  }, [mealWindows]);\n  useEffect(() => {\n    // Focus on input when component mounts\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n\n    // Fetch meal windows from server\n    fetchMealWindows();\n\n    // Check meal window status\n    checkMealWindow();\n    const interval = setInterval(checkMealWindow, 60000);\n\n    // Real-time countdown timer (updates every second)\n    const countdownInterval = setInterval(() => {\n      if (countdownMinutes > 0) {\n        setCountdownMinutes(prev => Math.max(0, prev - 1 / 60)); // Decrease by 1/60 minute per second\n      }\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n      clearInterval(countdownInterval);\n    };\n  }, []);\n\n  // Re-check meal window when mealWindows state changes\n  useEffect(() => {\n    checkMealWindow();\n  }, [mealWindows, checkMealWindow]);\n  const playSound = isSuccess => {\n    try {\n      if (isSuccess && successAudioRef.current) {\n        successAudioRef.current.play();\n      } else if (!isSuccess && errorAudioRef.current) {\n        errorAudioRef.current.play();\n      }\n    } catch (error) {\n      console.log('Audio playback failed:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!studentId.trim()) return;\n\n    // Check if meal window is blocked\n    if (mealWindowBlocked) {\n      setMessage(`❌ Attendance blocked: ${nextMealInfo}`);\n      playSound(false);\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setStudent(null);\n    try {\n      const response = await fetch('/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          studentId: studentId.trim()\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setStudent(data.student);\n        setStatus(data.status);\n        switch (data.status) {\n          case 'allowed':\n            setMessage('✅ Meal allowed! Welcome!');\n            playSound(true);\n            break;\n          case 'already_used':\n            setMessage('❌ Meal already used for this period');\n            playSound(false);\n            break;\n          case 'invalid':\n            setMessage('❌ Student ID not found');\n            playSound(false);\n            break;\n          case 'blocked':\n            setMessage(`❌ ${data.message || 'Meal window is closed'}`);\n            playSound(false);\n            break;\n          case 'error':\n            setMessage(`❌ ${data.message || 'System error occurred'}`);\n            playSound(false);\n            break;\n          default:\n            setMessage('❌ Unknown status');\n            playSound(false);\n        }\n      } else {\n        setMessage('❌ System error. Please try again.');\n        playSound(false);\n      }\n    } catch (error) {\n      setMessage('❌ Network error. Please check connection.');\n      playSound(false);\n    } finally {\n      setIsLoading(false);\n      setStudentId('');\n      // Refocus input for next scan\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', {\n        method: 'POST'\n      });\n      onLogout();\n    } catch (error) {\n      console.error('Logout error:', error);\n      onLogout(); // Logout anyway\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/salale_university_logo.png\",\n          alt: \"Salale University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Salale University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sign-out-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attendance-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-card\",\n            children: [mealWindowBlocked && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-window-warning\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-clock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"countdown-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: nextMealInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), countdownMinutes > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"countdown-timer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"countdown-number\",\n                    children: Math.floor(countdownMinutes / 60) > 0 ? `${Math.floor(countdownMinutes / 60)}h ${Math.floor(countdownMinutes % 60)}m` : `${Math.floor(countdownMinutes)}m`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"countdown-label\",\n                    children: \"remaining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"studentId\",\n                children: \"Student ID (Manual or Scan Barcode):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: inputRef,\n                type: \"text\",\n                id: \"studentId\",\n                value: studentId,\n                onChange: e => setStudentId(e.target.value),\n                placeholder: mealWindowBlocked ? \"Meal window closed\" : \"Enter ID\",\n                autoComplete: \"off\",\n                disabled: mealWindowBlocked,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"check-btn\",\n                disabled: isLoading || mealWindowBlocked,\n                children: mealWindowBlocked ? 'Meal Window Closed' : isLoading ? 'Checking...' : 'Check Attendance'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `attendance-message ${status}`,\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-section\",\n          children: student && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-message ${status}`,\n              children: status === 'allowed' ? '✅ ALLOWED' : status === 'already_used' ? '❌ ALREADY USED' : '❌ DENIED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 26\n                  }, this), \" \", student.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"ID Number:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 26\n                  }, this), \" \", student.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Program:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 26\n                  }, this), \" \", student.department]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-photo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: student.photoUrl || '/images/default-student.png',\n                  alt: \"Student Photo\",\n                  onError: e => {\n                    e.target.src = '/images/default-student.png';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: successAudioRef,\n      preload: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/sounds/success.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: errorAudioRef,\n      preload: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/sounds/error.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"Y/Nq0ICjntK6Hk78+UuSosteSJ0=\");\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","AttendancePage","user","onLogout","_s","studentId","setStudentId","student","setStudent","message","setMessage","status","setStatus","isLoading","setIsLoading","mealWindowBlocked","setMealWindowBlocked","nextMealInfo","setNextMealInfo","countdownMinutes","setCountdownMinutes","mealWindows","setMealWindows","inputRef","successAudioRef","errorAudioRef","fetchMealWindows","console","log","response","fetch","ok","data","json","success","Date","toLocaleTimeString","Object","entries","forEach","mealType","config","enabled","startTime","endTime","beforeWindow","afterWindow","error","statusText","checkMealWindow","keys","length","now","currentTime","getHours","getMinutes","Math","floor","toString","padStart","mealWindowsInMinutes","startHour","startMinute","split","map","Number","endHour","endMinute","windowStart","windowEnd","start","end","originalStart","originalEnd","isInMealWindow","nextMealType","timeUntilOpen","window","meal","breakfastWindow","breakfast","hours","minutes","nextWindowTime","setMinutes","timeString","hour","minute","timeText","charAt","toUpperCase","slice","current","focus","interval","setInterval","countdownInterval","prev","max","clearInterval","playSound","isSuccess","play","handleSubmit","e","preventDefault","trim","method","headers","body","JSON","stringify","setTimeout","handleLogout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","ref","type","id","value","onChange","target","placeholder","autoComplete","disabled","required","name","department","photoUrl","onError","preload","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Intern/src/components/AttendancePage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './AttendancePage.css';\n\nconst AttendancePage = ({ user, onLogout }) => {\n  const [studentId, setStudentId] = useState('');\n  const [student, setStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [mealWindowBlocked, setMealWindowBlocked] = useState(false);\n  const [nextMealInfo, setNextMealInfo] = useState('');\n  const [countdownMinutes, setCountdownMinutes] = useState(0);\n  const [mealWindows, setMealWindows] = useState({});\n  const inputRef = useRef(null);\n  const successAudioRef = useRef(null);\n  const errorAudioRef = useRef(null);\n\n  // Fetch meal windows from server\n  const fetchMealWindows = async () => {\n    try {\n      console.log('🔄 Fetching meal windows from API...');\n      const response = await fetch('/api/meal-windows');\n      if (response.ok) {\n        const data = await response.json();\n        console.log('📥 API Response:', data);\n        if (data.success && data.mealWindows) {\n          console.log('✅ Setting meal windows from database:', data.mealWindows);\n          console.log('🕐 Current time:', new Date().toLocaleTimeString());\n          \n          // Log each meal window with its timing\n          Object.entries(data.mealWindows).forEach(([mealType, config]) => {\n            if (config.enabled) {\n              console.log(`📋 ${mealType}: ${config.startTime}-${config.endTime} (±${config.beforeWindow}/${config.afterWindow}min)`);\n            }\n          });\n          \n          setMealWindows(data.mealWindows);\n        } else {\n          console.error('❌ Invalid API response structure:', data);\n        }\n      } else {\n        console.error('❌ API request failed:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('❌ Error fetching meal windows:', error);\n    }\n  };\n\n  // Meal window timing logic\n  const checkMealWindow = useCallback(() => {\n    // Don't process if meal windows haven't been loaded from database yet\n    if (Object.keys(mealWindows).length === 0) {\n      console.log('⏳ Meal windows not loaded yet, skipping check');\n      setMealWindowBlocked(true);\n      return;\n    }\n\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n    console.log(`🕐 Current time: ${Math.floor(currentTime/60)}:${(currentTime%60).toString().padStart(2,'0')} (${currentTime} minutes)`);\n    \n    // Convert meal windows to minutes format with before/after buffers\n    const mealWindowsInMinutes = {};\n    Object.entries(mealWindows).forEach(([mealType, config]) => {\n      if (config.enabled) {\n        const [startHour, startMinute] = config.startTime.split(':').map(Number);\n        const [endHour, endMinute] = config.endTime.split(':').map(Number);\n        \n        const startTime = startHour * 60 + startMinute;\n        const endTime = endHour * 60 + endMinute;\n        \n        // Allow scanning from startTime to endTime + afterWindow\n        const windowStart = startTime; // Start at actual meal start time\n        const windowEnd = endTime + (config.afterWindow || 30);\n        \n        mealWindowsInMinutes[mealType] = {\n          start: windowStart,\n          end: windowEnd,\n          originalStart: startTime,\n          originalEnd: endTime\n        };\n        \n        console.log(`📋 ${mealType}: Window ${Math.floor(windowStart/60)}:${(windowStart%60).toString().padStart(2,'0')}-${Math.floor(windowEnd/60)}:${(windowEnd%60).toString().padStart(2,'0')} (${windowStart}-${windowEnd})`);\n      }\n    });\n    \n    let isInMealWindow = false;\n    let nextMealType = '';\n    let timeUntilOpen = null;\n    \n    // Check if currently in any meal window (including buffers)\n    for (const [mealType, window] of Object.entries(mealWindowsInMinutes)) {\n      if (currentTime >= window.start && currentTime <= window.end) {\n        isInMealWindow = true;\n        console.log(`✅ Currently in ${mealType} window`);\n        break;\n      }\n    }\n    \n    if (!isInMealWindow) {\n      console.log('❌ Not in any meal window - attendance blocked');\n    }\n    \n    // Find next meal window if not currently in one\n    if (!isInMealWindow) {\n      for (const [meal, window] of Object.entries(mealWindowsInMinutes)) {\n        if (currentTime < window.start) {\n          nextMealType = meal;\n          timeUntilOpen = window.start - currentTime;\n          break;\n        }\n      }\n      \n      // If no meal today, next is breakfast tomorrow\n      if (!nextMealType) {\n        const breakfastWindow = mealWindowsInMinutes.breakfast;\n        if (breakfastWindow) {\n          nextMealType = 'breakfast';\n          timeUntilOpen = breakfastWindow.start + (24 * 60) - currentTime;\n        }\n      }\n    }\n    \n    setMealWindowBlocked(!isInMealWindow);\n    \n    if (timeUntilOpen) {\n      const hours = Math.floor(timeUntilOpen / 60);\n      const minutes = timeUntilOpen % 60;\n      const nextWindowTime = new Date();\n      nextWindowTime.setMinutes(nextWindowTime.getMinutes() + timeUntilOpen);\n      const timeString = nextWindowTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n      \n      // Set countdown minutes for real-time display\n      setCountdownMinutes(timeUntilOpen);\n      \n      let timeText;\n      if (hours > 0) {\n        timeText = `${hours}h ${minutes}m (${timeString})`;\n      } else {\n        timeText = `${minutes}m (${timeString})`;\n      }\n      \n      setNextMealInfo(`${nextMealType.charAt(0).toUpperCase() + nextMealType.slice(1)} window opens in ${timeText}`);\n    } else {\n      setCountdownMinutes(0);\n    }\n  }, [mealWindows]);\n\n  useEffect(() => {\n    // Focus on input when component mounts\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    \n    // Fetch meal windows from server\n    fetchMealWindows();\n    \n    // Check meal window status\n    checkMealWindow();\n    const interval = setInterval(checkMealWindow, 60000);\n    \n    // Real-time countdown timer (updates every second)\n    const countdownInterval = setInterval(() => {\n      if (countdownMinutes > 0) {\n        setCountdownMinutes(prev => Math.max(0, prev - (1/60))); // Decrease by 1/60 minute per second\n      }\n    }, 1000);\n    \n    return () => {\n      clearInterval(interval);\n      clearInterval(countdownInterval);\n    };\n  }, []);\n\n  // Re-check meal window when mealWindows state changes\n  useEffect(() => {\n    checkMealWindow();\n  }, [mealWindows, checkMealWindow]);\n\n  const playSound = (isSuccess) => {\n    try {\n      if (isSuccess && successAudioRef.current) {\n        successAudioRef.current.play();\n      } else if (!isSuccess && errorAudioRef.current) {\n        errorAudioRef.current.play();\n      }\n    } catch (error) {\n      console.log('Audio playback failed:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!studentId.trim()) return;\n\n    // Check if meal window is blocked\n    if (mealWindowBlocked) {\n      setMessage(`❌ Attendance blocked: ${nextMealInfo}`);\n      playSound(false);\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage('');\n    setStudent(null);\n\n    try {\n      const response = await fetch('/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ studentId: studentId.trim() }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setStudent(data.student);\n        setStatus(data.status);\n\n        switch (data.status) {\n          case 'allowed':\n            setMessage('✅ Meal allowed! Welcome!');\n            playSound(true);\n            break;\n          case 'already_used':\n            setMessage('❌ Meal already used for this period');\n            playSound(false);\n            break;\n          case 'invalid':\n            setMessage('❌ Student ID not found');\n            playSound(false);\n            break;\n          case 'blocked':\n            setMessage(`❌ ${data.message || 'Meal window is closed'}`);\n            playSound(false);\n            break;\n          case 'error':\n            setMessage(`❌ ${data.message || 'System error occurred'}`);\n            playSound(false);\n            break;\n          default:\n            setMessage('❌ Unknown status');\n            playSound(false);\n        }\n      } else {\n        setMessage('❌ System error. Please try again.');\n        playSound(false);\n      }\n    } catch (error) {\n      setMessage('❌ Network error. Please check connection.');\n      playSound(false);\n    } finally {\n      setIsLoading(false);\n      setStudentId('');\n      // Refocus input for next scan\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', { method: 'POST' });\n      onLogout();\n    } catch (error) {\n      console.error('Logout error:', error);\n      onLogout(); // Logout anyway\n    }\n  };\n\n  return (\n    <div className=\"attendance-container\">\n      <div className=\"attendance-header\">\n        <div className=\"header-left\">\n          <img src=\"/images/salale_university_logo.png\" alt=\"Salale University\" />\n          <h1>Salale University</h1>\n        </div>\n        <button onClick={handleLogout} className=\"logout-btn\">\n          <i className=\"fas fa-sign-out-alt\"></i>\n          Logout\n        </button>\n      </div>\n\n      <div className=\"attendance-content\">\n        <div className=\"attendance-layout\">\n          {/* Left side: Input form */}\n          <div className=\"input-section\">\n            <div className=\"input-card\">\n              {mealWindowBlocked && (\n                <div className=\"meal-window-warning\">\n                  <i className=\"fas fa-clock\"></i>\n                  <div className=\"countdown-info\">\n                    <span>{nextMealInfo}</span>\n                    {countdownMinutes > 0 && (\n                      <div className=\"countdown-timer\">\n                        <span className=\"countdown-number\">\n                          {Math.floor(countdownMinutes / 60) > 0 \n                            ? `${Math.floor(countdownMinutes / 60)}h ${Math.floor(countdownMinutes % 60)}m`\n                            : `${Math.floor(countdownMinutes)}m`\n                          }\n                        </span>\n                        <span className=\"countdown-label\">remaining</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"studentId\">Student ID (Manual or Scan Barcode):</label>\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  id=\"studentId\"\n                  value={studentId}\n                  onChange={(e) => setStudentId(e.target.value)}\n                  placeholder={mealWindowBlocked ? \"Meal window closed\" : \"Enter ID\"}\n                  autoComplete=\"off\"\n                  disabled={mealWindowBlocked}\n                  required\n                />\n                <button type=\"submit\" className=\"check-btn\" disabled={isLoading || mealWindowBlocked}>\n                  {mealWindowBlocked ? 'Meal Window Closed' : isLoading ? 'Checking...' : 'Check Attendance'}\n                </button>\n              </form>\n\n              {message && (\n                <div className={`attendance-message ${status}`}>\n                  {message}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right side: Student information */}\n          <div className=\"result-section\">\n            {student && (\n              <div className=\"student-card\">\n                <div className={`status-message ${status}`}>\n                  {status === 'allowed' ? '✅ ALLOWED' : \n                   status === 'already_used' ? '❌ ALREADY USED' : \n                   '❌ DENIED'}\n                </div>\n                <div className=\"student-info-row\">\n                  <div className=\"student-details\">\n                    <div><strong>Name:</strong> {student.name}</div>\n                    <div><strong>ID Number:</strong> {student.id}</div>\n                    <div><strong>Program:</strong> {student.department}</div>\n                  </div>\n                    \n                  <div className=\"student-photo\">\n                    <img \n                      src={student.photoUrl || '/images/default-student.png'} \n                      alt=\"Student Photo\"\n                      onError={(e) => {\n                        e.target.src = '/images/default-student.png';\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Audio elements */}\n      <audio ref={successAudioRef} preload=\"auto\">\n        <source src=\"/sounds/success.mp3\" type=\"audio/mpeg\" />\n      </audio>\n      <audio ref={errorAudioRef} preload=\"auto\">\n        <source src=\"/sounds/error.mp3\" type=\"audio/mpeg\" />\n      </audio>\n    </div>\n  );\n};\n\nexport default AttendancePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}