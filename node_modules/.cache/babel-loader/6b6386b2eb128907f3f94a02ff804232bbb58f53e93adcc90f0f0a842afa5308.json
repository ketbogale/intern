{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Intern\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Admin email verification states\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const [adminEmail, setAdminEmail] = useState('');\n  const [emailLoading, setEmailLoading] = useState(false);\n  const [emailMessage, setEmailMessage] = useState('');\n\n  // OTP verification states\n  const [showOTPModal, setShowOTPModal] = useState(false);\n  const [otpCode, setOtpCode] = useState('');\n  const [otpLoading, setOtpLoading] = useState(false);\n  const [otpMessage, setOtpMessage] = useState('');\n  const [otpCountdown, setOtpCountdown] = useState(300); // 5 minutes\n  const [canResendOTP, setCanResendOTP] = useState(false);\n  const [resendCountdown, setResendCountdown] = useState(0);\n  const [maskedEmail, setMaskedEmail] = useState('');\n\n  // OTP countdown timer\n  useEffect(() => {\n    let interval;\n    if (showOTPModal && otpCountdown > 0) {\n      interval = setInterval(() => {\n        setOtpCountdown(prev => {\n          if (prev <= 1) {\n            setOtpMessage('Verification code expired. Please request a new one.');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [showOTPModal, otpCountdown]);\n\n  // Resend OTP countdown\n  useEffect(() => {\n    let interval;\n    if (resendCountdown > 0) {\n      interval = setInterval(() => {\n        setResendCountdown(prev => {\n          if (prev <= 1) {\n            setCanResendOTP(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [resendCountdown]);\n\n  // Format countdown time\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage('');\n    try {\n      // First check if admin credentials (username/password only)\n      const adminCheckResponse = await fetch('/api/admin/check-credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const adminCheckData = await adminCheckResponse.json();\n      if (adminCheckResponse.ok && adminCheckData.success) {\n        // Admin credentials valid - show email prompt\n        setMessage('Admin credentials verified. Please enter your email.');\n        setShowEmailModal(true);\n      } else {\n        // Try regular staff login\n        const response = await fetch('/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        const data = await response.json();\n        if (response.ok && data.success) {\n          setMessage('Login successful!');\n          onLogin(data.user);\n        } else {\n          setMessage(data.error || 'Login failed');\n        }\n      }\n    } catch (error) {\n      setMessage('Network error. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle OTP verification\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    if (!otpCode || otpCode.length !== 6) {\n      setOtpMessage('Please enter a valid 6-digit verification code');\n      return;\n    }\n    try {\n      setOtpLoading(true);\n      setOtpMessage('');\n      const response = await fetch('/api/admin/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          otp: otpCode\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setOtpMessage('Login successful! Redirecting...');\n\n        // Close OTP modal and login\n        setTimeout(() => {\n          setShowOTPModal(false);\n          setOtpCode('');\n          setOtpMessage('');\n          onLogin(data.user);\n        }, 1500);\n      } else {\n        setOtpMessage(data.message || 'Invalid verification code');\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setOtpMessage('Network error. Please try again.');\n    } finally {\n      setOtpLoading(false);\n    }\n  };\n\n  // Handle email verification for admin\n  const handleEmailVerification = async e => {\n    e.preventDefault();\n    if (!adminEmail) {\n      setEmailMessage('Please enter your email address');\n      return;\n    }\n    try {\n      setEmailLoading(true);\n      setEmailMessage('');\n      const response = await fetch('/api/admin/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          email: adminEmail\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setEmailMessage('Verification code sent to your email');\n        setMaskedEmail(data.email);\n        // Hide email section and show OTP section after delay\n        setTimeout(() => {\n          setShowEmailModal(false);\n          setTimeout(() => {\n            setShowOTPModal(true);\n          }, 300);\n        }, 1500);\n        setOtpCountdown(300);\n        setCanResendOTP(false);\n        setResendCountdown(60);\n      } else {\n        setEmailMessage(data.message || 'Invalid email address');\n      }\n    } catch (error) {\n      console.error('Error verifying email:', error);\n      setEmailMessage('Network error. Please try again.');\n    } finally {\n      setEmailLoading(false);\n    }\n  };\n\n  // Handle resend OTP\n  const handleResendOTP = async () => {\n    try {\n      setOtpLoading(true);\n      setOtpMessage('');\n      const response = await fetch('/api/admin/resend-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        setOtpMessage('New verification code sent to your email');\n        setOtpCountdown(300);\n        setCanResendOTP(false);\n        setResendCountdown(60);\n      } else {\n        setOtpMessage(data.message || 'Failed to resend code');\n      }\n    } catch (error) {\n      console.error('Error resending OTP:', error);\n      setOtpMessage('Network error. Please try again.');\n    } finally {\n      setOtpLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/salale_university_logo.png\",\n        alt: \"Salale University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Salale University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons cafeteria-icon\",\n        children: \"restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [!showEmailModal && !showOTPModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"Enter username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: showPassword ? 'text' : 'password',\n                id: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                placeholder: \"Enter password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'} password-toggle`,\n                onClick: () => setShowPassword(!showPassword)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-button\",\n              disabled: isLoading,\n              children: isLoading ? 'Logging...' : 'Login'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `login-message ${message.includes('successful') || message.includes('sent') ? 'success' : 'error'}`,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), showEmailModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-envelope\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), \"Admin Email Verification\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: () => setShowEmailModal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-body\",\n            children: [emailMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${emailMessage.includes('sent') ? 'success' : 'error'}`,\n              children: emailMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83D\\uDCE7 Enter Your Admin Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"form-description\",\n                children: \"Please enter the email address associated with your admin account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"adminEmail\",\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"adminEmail\",\n                  value: adminEmail,\n                  onChange: e => setAdminEmail(e.target.value),\n                  placeholder: \"Enter your admin email\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"cancel-btn\",\n                  onClick: () => setShowEmailModal(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"submit-btn\",\n                  onClick: e => handleEmailVerification(e),\n                  disabled: emailLoading,\n                  children: emailLoading ? 'Sending...' : 'Send Verification Code'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), showOTPModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-shield-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), \"Admin Verification\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: () => setShowOTPModal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-body\",\n            children: [otpMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${otpMessage.includes('successful') ? 'success' : 'error'}`,\n              children: otpMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"otp-form\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"otp-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"otp\",\n                    children: \"Enter verification Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"otp\",\n                    value: otpCode,\n                    onChange: e => setOtpCode(e.target.value),\n                    placeholder: \"Enter 6-digit code\",\n                    maxLength: \"6\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"otp-timer\",\n                  children: otpCountdown > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Code expires in: \", Math.floor(otpCountdown / 60), \":\", (otpCountdown % 60).toString().padStart(2, '0')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"expired\",\n                    children: \"Code has expired. Please request a new one.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"cancel-btn\",\n                    onClick: () => setShowOTPModal(false),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"submit-btn\",\n                    onClick: e => handleVerifyOTP(e),\n                    disabled: otpLoading || otpCountdown <= 0,\n                    children: otpLoading ? 'Verifying...' : 'Verify Code'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"resend-section\",\n                  children: canResendOTP ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"resend-btn\",\n                    onClick: handleResendOTP,\n                    children: \"Resend Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Resend available in \", resendCountdown, \"s\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"QfMNjZ8tetNA4iQZmsInug4brdw=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","onLogin","_s","username","setUsername","password","setPassword","showPassword","setShowPassword","message","setMessage","isLoading","setIsLoading","showEmailModal","setShowEmailModal","adminEmail","setAdminEmail","emailLoading","setEmailLoading","emailMessage","setEmailMessage","showOTPModal","setShowOTPModal","otpCode","setOtpCode","otpLoading","setOtpLoading","otpMessage","setOtpMessage","otpCountdown","setOtpCountdown","canResendOTP","setCanResendOTP","resendCountdown","setResendCountdown","maskedEmail","setMaskedEmail","interval","setInterval","prev","clearInterval","formatTime","seconds","mins","Math","floor","secs","toString","padStart","handleSubmit","e","preventDefault","adminCheckResponse","fetch","method","headers","body","JSON","stringify","adminCheckData","json","ok","success","response","data","user","error","handleVerifyOTP","length","otp","setTimeout","console","handleEmailVerification","email","handleResendOTP","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","onClick","disabled","includes","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Intern/src/components/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './LoginPage.css';\n\nconst LoginPage = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Admin email verification states\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const [adminEmail, setAdminEmail] = useState('');\n  const [emailLoading, setEmailLoading] = useState(false);\n  const [emailMessage, setEmailMessage] = useState('');\n  \n  // OTP verification states\n  const [showOTPModal, setShowOTPModal] = useState(false);\n  const [otpCode, setOtpCode] = useState('');\n  const [otpLoading, setOtpLoading] = useState(false);\n  const [otpMessage, setOtpMessage] = useState('');\n  const [otpCountdown, setOtpCountdown] = useState(300); // 5 minutes\n  const [canResendOTP, setCanResendOTP] = useState(false);\n  const [resendCountdown, setResendCountdown] = useState(0);\n  const [maskedEmail, setMaskedEmail] = useState('');\n\n  // OTP countdown timer\n  useEffect(() => {\n    let interval;\n    if (showOTPModal && otpCountdown > 0) {\n      interval = setInterval(() => {\n        setOtpCountdown(prev => {\n          if (prev <= 1) {\n            setOtpMessage('Verification code expired. Please request a new one.');\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [showOTPModal, otpCountdown]);\n\n  // Resend OTP countdown\n  useEffect(() => {\n    let interval;\n    if (resendCountdown > 0) {\n      interval = setInterval(() => {\n        setResendCountdown(prev => {\n          if (prev <= 1) {\n            setCanResendOTP(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [resendCountdown]);\n\n  // Format countdown time\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage('');\n\n    try {\n      // First check if admin credentials (username/password only)\n      const adminCheckResponse = await fetch('/api/admin/check-credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const adminCheckData = await adminCheckResponse.json();\n\n      if (adminCheckResponse.ok && adminCheckData.success) {\n        // Admin credentials valid - show email prompt\n        setMessage('Admin credentials verified. Please enter your email.');\n        setShowEmailModal(true);\n      } else {\n        // Try regular staff login\n        const response = await fetch('/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ username, password }),\n        });\n\n        const data = await response.json();\n\n        if (response.ok && data.success) {\n          setMessage('Login successful!');\n          onLogin(data.user);\n        } else {\n          setMessage(data.error || 'Login failed');\n        }\n      }\n    } catch (error) {\n      setMessage('Network error. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle OTP verification\n  const handleVerifyOTP = async (e) => {\n    e.preventDefault();\n    \n    if (!otpCode || otpCode.length !== 6) {\n      setOtpMessage('Please enter a valid 6-digit verification code');\n      return;\n    }\n    \n    try {\n      setOtpLoading(true);\n      setOtpMessage('');\n      \n      const response = await fetch('/api/admin/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ otp: otpCode })\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setOtpMessage('Login successful! Redirecting...');\n        \n        // Close OTP modal and login\n        setTimeout(() => {\n          setShowOTPModal(false);\n          setOtpCode('');\n          setOtpMessage('');\n          onLogin(data.user);\n        }, 1500);\n      } else {\n        setOtpMessage(data.message || 'Invalid verification code');\n      }\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setOtpMessage('Network error. Please try again.');\n    } finally {\n      setOtpLoading(false);\n    }\n  };\n\n  // Handle email verification for admin\n  const handleEmailVerification = async (e) => {\n    e.preventDefault();\n    \n    if (!adminEmail) {\n      setEmailMessage('Please enter your email address');\n      return;\n    }\n    \n    try {\n      setEmailLoading(true);\n      setEmailMessage('');\n      \n      const response = await fetch('/api/admin/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password, email: adminEmail })\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setEmailMessage('Verification code sent to your email');\n        setMaskedEmail(data.email);\n        // Hide email section and show OTP section after delay\n        setTimeout(() => {\n          setShowEmailModal(false);\n          setTimeout(() => {\n            setShowOTPModal(true);\n          }, 300);\n        }, 1500);\n        setOtpCountdown(300);\n        setCanResendOTP(false);\n        setResendCountdown(60);\n      } else {\n        setEmailMessage(data.message || 'Invalid email address');\n      }\n    } catch (error) {\n      console.error('Error verifying email:', error);\n      setEmailMessage('Network error. Please try again.');\n    } finally {\n      setEmailLoading(false);\n    }\n  };\n\n  // Handle resend OTP\n  const handleResendOTP = async () => {\n    try {\n      setOtpLoading(true);\n      setOtpMessage('');\n      \n      const response = await fetch('/api/admin/resend-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setOtpMessage('New verification code sent to your email');\n        setOtpCountdown(300);\n        setCanResendOTP(false);\n        setResendCountdown(60);\n      } else {\n        setOtpMessage(data.message || 'Failed to resend code');\n      }\n    } catch (error) {\n      console.error('Error resending OTP:', error);\n      setOtpMessage('Network error. Please try again.');\n    } finally {\n      setOtpLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"head-row\">\n        <img src=\"/images/salale_university_logo.png\" alt=\"Salale University\" />\n        <h1>Salale University</h1>\n        <i className=\"material-icons cafeteria-icon\">restaurant</i>\n      </div>\n\n      <div className=\"container\">\n        {/* <div className=\"header\">\n          <img src=\"/images/salale_university_logo.png\" alt=\"Salale University Logo\" />\n          <h2>Salale University Meal <br />Attendance System</h2>\n        </div> */}\n\n        <div className=\"login-box\">\n          {/* Login Form */}\n          {!showEmailModal && !showOTPModal && (\n            <>\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">Username:</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  placeholder=\"Enter username\"\n                  required\n                />\n\n                <label htmlFor=\"password\">Password:</label>\n                <div className=\"password-wrapper\">\n                  <input\n                    type={showPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Enter password\"\n                    required\n                  />\n                  <i\n                    className={`fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'} password-toggle`}\n                    onClick={() => setShowPassword(!showPassword)}\n                  ></i>\n                </div>\n\n                <button type=\"submit\" className=\"login-button\" disabled={isLoading}>\n                  {isLoading ? 'Logging...' : 'Login'}\n                </button>\n              </form>\n\n              {message && (\n                <div className={`login-message ${message.includes('successful') || message.includes('sent') ? 'success' : 'error'}`}>\n                  {message}\n                </div>\n              )}\n            </>\n          )}\n\n          {/* Email Verification Section */}\n          {showEmailModal && (\n            <div className=\"verification-content\">\n              <div className=\"section-header\">\n                <h3>\n                  <i className=\"fas fa-envelope\"></i>\n                  Admin Email Verification\n                </h3>\n                <button className=\"close-btn\" onClick={() => setShowEmailModal(false)}>×</button>\n              </div>\n              <div className=\"section-body\">\n                {emailMessage && (\n                  <div className={`message ${emailMessage.includes('sent') ? 'success' : 'error'}`}>\n                    {emailMessage}\n                  </div>\n                )}\n                <div className=\"form-group\">\n                  <label>📧 Enter Your Admin Email</label>\n                  <p className=\"form-description\">Please enter the email address associated with your admin account</p>\n                  <div className=\"input-group\">\n                    <label htmlFor=\"adminEmail\">Email Address</label>\n                    <input\n                      type=\"email\"\n                      id=\"adminEmail\"\n                      value={adminEmail}\n                      onChange={(e) => setAdminEmail(e.target.value)}\n                      placeholder=\"Enter your admin email\"\n                      required\n                    />\n                  </div>\n                  <div className=\"modal-actions\">\n                    <button \n                      type=\"button\" \n                      className=\"cancel-btn\"\n                      onClick={() => setShowEmailModal(false)}\n                    >\n                      Cancel\n                    </button>\n                    <button \n                      type=\"button\" \n                      className=\"submit-btn\"\n                      onClick={(e) => handleEmailVerification(e)}\n                      disabled={emailLoading}\n                    >\n                      {emailLoading ? 'Sending...' : 'Send Verification Code'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* OTP Verification Section */}\n          {showOTPModal && (\n            <div className=\"verification-content\">\n              <div className=\"section-header\">\n                <h3>\n                  <i className=\"fas fa-shield-alt\"></i>\n                  Admin Verification\n                </h3>\n                <button className=\"close-btn\" onClick={() => setShowOTPModal(false)}>×</button>\n              </div>\n              <div className=\"section-body\">\n                {otpMessage && (\n                  <div className={`message ${otpMessage.includes('successful') ? 'success' : 'error'}`}>\n                    {otpMessage}\n                  </div>\n                )}\n                <div className=\"otp-form\">\n                  <div className=\"otp-section\">\n                    <div className=\"input-group\">\n                      <label htmlFor=\"otp\">Enter verification Code</label>\n                      <input\n                        type=\"text\"\n                        id=\"otp\"\n                        value={otpCode}\n                        onChange={(e) => setOtpCode(e.target.value)}\n                        placeholder=\"Enter 6-digit code\"\n                        maxLength=\"6\"\n                        required\n                      />\n                    </div>\n                    \n                    <div className=\"otp-timer\">\n                      {otpCountdown > 0 ? (\n                        <p>Code expires in: {Math.floor(otpCountdown / 60)}:{(otpCountdown % 60).toString().padStart(2, '0')}</p>\n                      ) : (\n                        <p className=\"expired\">Code has expired. Please request a new one.</p>\n                      )}\n                    </div>\n                    \n                    <div className=\"modal-actions\">\n                      <button \n                        type=\"button\" \n                        className=\"cancel-btn\"\n                        onClick={() => setShowOTPModal(false)}\n                      >\n                        Cancel\n                      </button>\n                      <button \n                        type=\"button\" \n                        className=\"submit-btn\"\n                        onClick={(e) => handleVerifyOTP(e)}\n                        disabled={otpLoading || otpCountdown <= 0}\n                      >\n                        {otpLoading ? 'Verifying...' : 'Verify Code'}\n                      </button>\n                    </div>\n                    \n                    <div className=\"resend-section\">\n                      {canResendOTP ? (\n                        <button \n                          type=\"button\" \n                          className=\"resend-btn\"\n                          onClick={handleResendOTP}\n                        >\n                          Resend Code\n                        </button>\n                      ) : (\n                        <p>Resend available in {resendCountdown}s</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}