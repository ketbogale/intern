{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Intern\\\\src\\\\components\\\\AdminSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOTPVerification } from '../hooks/useOTPVerification';\nimport DatabaseResetComponent from './DatabaseResetComponent';\nimport './AdminSettings.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminSettings = ({\n  adminEmail = \"admin@system.com\",\n  fetchAdminEmail = () => {}\n}) => {\n  _s();\n  // Admin credentials state\n  const [showAdminCredentialsModal, setShowAdminCredentialsModal] = useState(false);\n  const [adminCredentials, setAdminCredentials] = useState({\n    currentPassword: '',\n    newUsername: '',\n    newPassword: '',\n    confirmPassword: '',\n    email: ''\n  });\n  const [adminCredentialsLoading, setAdminCredentialsLoading] = useState(false);\n  const [adminCredentialsMessage, setAdminCredentialsMessage] = useState('');\n\n  // Staff management state\n  const [showAddStaffModal, setShowAddStaffModal] = useState(false);\n  const [newStaffData, setNewStaffData] = useState({\n    username: '',\n    password: ''\n  });\n  const [addStaffLoading, setAddStaffLoading] = useState(false);\n  const [addStaffMessage, setAddStaffMessage] = useState('');\n\n  // Meal windows state\n  const [mealWindows, setMealWindows] = useState({\n    breakfast: {\n      startTime: '06:00',\n      endTime: '09:00',\n      beforeWindow: 30,\n      afterWindow: 30,\n      enabled: true\n    },\n    lunch: {\n      startTime: '11:00',\n      endTime: '14:00',\n      beforeWindow: 30,\n      afterWindow: 30,\n      enabled: true\n    },\n    dinner: {\n      startTime: '16:00',\n      endTime: '20:00',\n      beforeWindow: 30,\n      afterWindow: 30,\n      enabled: true\n    },\n    lateNight: {\n      startTime: '01:00',\n      endTime: '05:30',\n      beforeWindow: 15,\n      afterWindow: 15,\n      enabled: true\n    }\n  });\n  const [mealWindowsLoading, setMealWindowsLoading] = useState(false);\n  const [mealWindowsMessage, setMealWindowsMessage] = useState('');\n\n  // Database configuration state\n  const [showDatabaseConfigModal, setShowDatabaseConfigModal] = useState(false);\n  const [databaseConfig, setDatabaseConfig] = useState({\n    connectionString: 'mongodb://localhost:27017/meal_attendance',\n    backupSchedule: 'daily',\n    backupTime: '02:00',\n    dataRetentionMonths: 24,\n    archiveAfterMonths: 12,\n    connectionPoolSize: 10,\n    connectionTimeout: 30,\n    cacheEnabled: true,\n    cacheDurationMinutes: 30,\n    indexOptimization: true,\n    gdprCompliance: true\n  });\n  const [databaseConfigLoading, setDatabaseConfigLoading] = useState(false);\n  const [databaseConfigMessage, setDatabaseConfigMessage] = useState('');\n\n  // Use OTP verification hook\n  const otpVerification = useOTPVerification();\n\n  // Handle admin credentials update\n  const handleUpdateAdminCredentials = async e => {\n    e.preventDefault();\n    try {\n      setAdminCredentialsLoading(true);\n      setAdminCredentialsMessage('');\n      const response = await fetch('/api/admin/credentials', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(adminCredentials)\n      });\n      const data = await response.json();\n      if (data.success) {\n        setAdminCredentialsMessage('Admin credentials updated successfully!');\n        setAdminCredentials({\n          currentPassword: '',\n          newUsername: '',\n          newPassword: '',\n          confirmPassword: '',\n          email: ''\n        });\n        if (adminCredentials.email) {\n          fetchAdminEmail();\n        }\n        setTimeout(() => {\n          setShowAdminCredentialsModal(false);\n          setAdminCredentialsMessage('');\n        }, 2000);\n      } else {\n        setAdminCredentialsMessage(data.message || 'Failed to update credentials');\n      }\n    } catch (error) {\n      setAdminCredentialsMessage('Network error. Please try again.');\n    } finally {\n      setAdminCredentialsLoading(false);\n    }\n  };\n\n  // Handle adding new staff\n  const handleAddStaff = async e => {\n    e.preventDefault();\n    if (!newStaffData.username.trim() || !newStaffData.password.trim()) {\n      setAddStaffMessage('Username and Password are required fields.');\n      return;\n    }\n    try {\n      setAddStaffLoading(true);\n      setAddStaffMessage('');\n      const response = await fetch('/api/staff/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newStaffData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setAddStaffMessage('Staff registered successfully!');\n        setNewStaffData({\n          username: '',\n          password: ''\n        });\n        setTimeout(() => {\n          setShowAddStaffModal(false);\n          setAddStaffMessage('');\n        }, 2000);\n      } else {\n        setAddStaffMessage(data.error || 'Failed to register staff.');\n      }\n    } catch (error) {\n      setAddStaffMessage('Network error. Please check if the backend server is running.');\n    } finally {\n      setAddStaffLoading(false);\n    }\n  };\n\n  // Handle saving meal windows\n  const handleSaveMealWindows = async () => {\n    try {\n      setMealWindowsLoading(true);\n      setMealWindowsMessage('');\n      const response = await fetch('/api/meal-windows', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mealWindows\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMealWindowsMessage('✅ Meal windows saved successfully!');\n        setTimeout(() => setMealWindowsMessage(''), 3000);\n      } else {\n        setMealWindowsMessage('❌ ' + (data.error || 'Failed to save meal windows.'));\n      }\n    } catch (error) {\n      setMealWindowsMessage('❌ Network error: ' + error.message);\n    } finally {\n      setMealWindowsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Admin Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-info\",\n          children: \"Manage system configuration and admin credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAdminCredentialsModal(true),\n          className: \"refresh-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), \"Update Credentials\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-cog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), \" Admin Credentials\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Update admin username, password, and email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAdminCredentialsModal(true),\n            className: \"settings-btn primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), \"Update Credentials\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-users-cog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), \" Staff Management\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add new staff members for scanner access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddStaffModal(true),\n            className: \"settings-btn primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), \"Add Staff Member\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-clock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), \" Meal Windows\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Configure meal time windows and attendance periods\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-windows-grid\",\n            children: Object.entries(mealWindows).map(([mealType, config]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-window-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meal-header\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"meal-checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: config.enabled,\n                    onChange: e => setMealWindows({\n                      ...mealWindows,\n                      [mealType]: {\n                        ...config,\n                        enabled: e.target.checked\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"meal-name\",\n                    children: mealType.charAt(0).toUpperCase() + mealType.slice(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), config.enabled && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meal-config\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-inputs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Start Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      value: config.startTime,\n                      onChange: e => setMealWindows({\n                        ...mealWindows,\n                        [mealType]: {\n                          ...config,\n                          startTime: e.target.value\n                        }\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"End Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      value: config.endTime,\n                      onChange: e => setMealWindows({\n                        ...mealWindows,\n                        [mealType]: {\n                          ...config,\n                          endTime: e.target.value\n                        }\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)]\n            }, mealType, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), mealWindowsMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `settings-message ${mealWindowsMessage.includes('✅') ? 'success' : 'error'}`,\n            children: mealWindowsMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveMealWindows,\n              className: \"settings-btn primary\",\n              disabled: mealWindowsLoading,\n              children: mealWindowsLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-spinner fa-spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this), \"Saving...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this), \"Save Meal Windows\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-exclamation-triangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), \" Database Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Reset database and manage system data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(DatabaseResetComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminSettings, \"3+qLvy6XktRxhk+wteXYZ8RwunU=\", false, function () {\n  return [useOTPVerification];\n});\n_c = AdminSettings;\nexport default AdminSettings;\nvar _c;\n$RefreshReg$(_c, \"AdminSettings\");","map":{"version":3,"names":["React","useState","useOTPVerification","DatabaseResetComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminSettings","adminEmail","fetchAdminEmail","_s","showAdminCredentialsModal","setShowAdminCredentialsModal","adminCredentials","setAdminCredentials","currentPassword","newUsername","newPassword","confirmPassword","email","adminCredentialsLoading","setAdminCredentialsLoading","adminCredentialsMessage","setAdminCredentialsMessage","showAddStaffModal","setShowAddStaffModal","newStaffData","setNewStaffData","username","password","addStaffLoading","setAddStaffLoading","addStaffMessage","setAddStaffMessage","mealWindows","setMealWindows","breakfast","startTime","endTime","beforeWindow","afterWindow","enabled","lunch","dinner","lateNight","mealWindowsLoading","setMealWindowsLoading","mealWindowsMessage","setMealWindowsMessage","showDatabaseConfigModal","setShowDatabaseConfigModal","databaseConfig","setDatabaseConfig","connectionString","backupSchedule","backupTime","dataRetentionMonths","archiveAfterMonths","connectionPoolSize","connectionTimeout","cacheEnabled","cacheDurationMinutes","indexOptimization","gdprCompliance","databaseConfigLoading","setDatabaseConfigLoading","databaseConfigMessage","setDatabaseConfigMessage","otpVerification","handleUpdateAdminCredentials","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","setTimeout","message","error","handleAddStaff","trim","ok","handleSaveMealWindows","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","mealType","config","type","checked","onChange","target","charAt","toUpperCase","slice","value","includes","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Intern/src/components/AdminSettings.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useOTPVerification } from '../hooks/useOTPVerification';\nimport DatabaseResetComponent from './DatabaseResetComponent';\nimport './AdminSettings.css';\n\nconst AdminSettings = ({ adminEmail = \"admin@system.com\", fetchAdminEmail = () => {} }) => {\n  // Admin credentials state\n  const [showAdminCredentialsModal, setShowAdminCredentialsModal] = useState(false);\n  const [adminCredentials, setAdminCredentials] = useState({\n    currentPassword: '',\n    newUsername: '',\n    newPassword: '',\n    confirmPassword: '',\n    email: ''\n  });\n  const [adminCredentialsLoading, setAdminCredentialsLoading] = useState(false);\n  const [adminCredentialsMessage, setAdminCredentialsMessage] = useState('');\n\n  // Staff management state\n  const [showAddStaffModal, setShowAddStaffModal] = useState(false);\n  const [newStaffData, setNewStaffData] = useState({\n    username: '',\n    password: ''\n  });\n  const [addStaffLoading, setAddStaffLoading] = useState(false);\n  const [addStaffMessage, setAddStaffMessage] = useState('');\n\n  // Meal windows state\n  const [mealWindows, setMealWindows] = useState({\n    breakfast: { startTime: '06:00', endTime: '09:00', beforeWindow: 30, afterWindow: 30, enabled: true },\n    lunch: { startTime: '11:00', endTime: '14:00', beforeWindow: 30, afterWindow: 30, enabled: true },\n    dinner: { startTime: '16:00', endTime: '20:00', beforeWindow: 30, afterWindow: 30, enabled: true },\n    lateNight: { startTime: '01:00', endTime: '05:30', beforeWindow: 15, afterWindow: 15, enabled: true }\n  });\n  const [mealWindowsLoading, setMealWindowsLoading] = useState(false);\n  const [mealWindowsMessage, setMealWindowsMessage] = useState('');\n\n  // Database configuration state\n  const [showDatabaseConfigModal, setShowDatabaseConfigModal] = useState(false);\n  const [databaseConfig, setDatabaseConfig] = useState({\n    connectionString: 'mongodb://localhost:27017/meal_attendance',\n    backupSchedule: 'daily',\n    backupTime: '02:00',\n    dataRetentionMonths: 24,\n    archiveAfterMonths: 12,\n    connectionPoolSize: 10,\n    connectionTimeout: 30,\n    cacheEnabled: true,\n    cacheDurationMinutes: 30,\n    indexOptimization: true,\n    gdprCompliance: true\n  });\n  const [databaseConfigLoading, setDatabaseConfigLoading] = useState(false);\n  const [databaseConfigMessage, setDatabaseConfigMessage] = useState('');\n\n  // Use OTP verification hook\n  const otpVerification = useOTPVerification();\n\n  // Handle admin credentials update\n  const handleUpdateAdminCredentials = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setAdminCredentialsLoading(true);\n      setAdminCredentialsMessage('');\n      \n      const response = await fetch('/api/admin/credentials', {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(adminCredentials)\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setAdminCredentialsMessage('Admin credentials updated successfully!');\n        setAdminCredentials({\n          currentPassword: '',\n          newUsername: '',\n          newPassword: '',\n          confirmPassword: '',\n          email: ''\n        });\n        \n        if (adminCredentials.email) {\n          fetchAdminEmail();\n        }\n        \n        setTimeout(() => {\n          setShowAdminCredentialsModal(false);\n          setAdminCredentialsMessage('');\n        }, 2000);\n      } else {\n        setAdminCredentialsMessage(data.message || 'Failed to update credentials');\n      }\n    } catch (error) {\n      setAdminCredentialsMessage('Network error. Please try again.');\n    } finally {\n      setAdminCredentialsLoading(false);\n    }\n  };\n\n  // Handle adding new staff\n  const handleAddStaff = async (e) => {\n    e.preventDefault();\n    \n    if (!newStaffData.username.trim() || !newStaffData.password.trim()) {\n      setAddStaffMessage('Username and Password are required fields.');\n      return;\n    }\n\n    try {\n      setAddStaffLoading(true);\n      setAddStaffMessage('');\n      \n      const response = await fetch('/api/staff/add', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newStaffData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setAddStaffMessage('Staff registered successfully!');\n        setNewStaffData({ username: '', password: '' });\n        setTimeout(() => {\n          setShowAddStaffModal(false);\n          setAddStaffMessage('');\n        }, 2000);\n      } else {\n        setAddStaffMessage(data.error || 'Failed to register staff.');\n      }\n    } catch (error) {\n      setAddStaffMessage('Network error. Please check if the backend server is running.');\n    } finally {\n      setAddStaffLoading(false);\n    }\n  };\n\n  // Handle saving meal windows\n  const handleSaveMealWindows = async () => {\n    try {\n      setMealWindowsLoading(true);\n      setMealWindowsMessage('');\n      \n      const response = await fetch('/api/meal-windows', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ mealWindows }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setMealWindowsMessage('✅ Meal windows saved successfully!');\n        setTimeout(() => setMealWindowsMessage(''), 3000);\n      } else {\n        setMealWindowsMessage('❌ ' + (data.error || 'Failed to save meal windows.'));\n      }\n    } catch (error) {\n      setMealWindowsMessage('❌ Network error: ' + error.message);\n    } finally {\n      setMealWindowsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"admin-settings\">\n      <div className=\"content-header\">\n        <div className=\"header-left-content\">\n          <h2>Admin Settings</h2>\n          <div className=\"date-info\">\n            Manage system configuration and admin credentials\n          </div>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            onClick={() => setShowAdminCredentialsModal(true)} \n            className=\"refresh-btn\"\n          >\n            <i className=\"fas fa-key\"></i>\n            Update Credentials\n          </button>\n        </div>\n      </div>\n\n      <div className=\"settings-grid\">\n        {/* Admin Credentials Card */}\n        <div className=\"settings-card\">\n          <div className=\"card-header\">\n            <h3><i className=\"fas fa-user-cog\"></i> Admin Credentials</h3>\n            <p>Update admin username, password, and email</p>\n          </div>\n          <div className=\"card-actions\">\n            <button \n              onClick={() => setShowAdminCredentialsModal(true)}\n              className=\"settings-btn primary\"\n            >\n              <i className=\"fas fa-edit\"></i>\n              Update Credentials\n            </button>\n          </div>\n        </div>\n\n        {/* Staff Management Card */}\n        <div className=\"settings-card\">\n          <div className=\"card-header\">\n            <h3><i className=\"fas fa-users-cog\"></i> Staff Management</h3>\n            <p>Add new staff members for scanner access</p>\n          </div>\n          <div className=\"card-actions\">\n            <button \n              onClick={() => setShowAddStaffModal(true)}\n              className=\"settings-btn primary\"\n            >\n              <i className=\"fas fa-plus\"></i>\n              Add Staff Member\n            </button>\n          </div>\n        </div>\n\n        {/* Meal Windows Card */}\n        <div className=\"settings-card\">\n          <div className=\"card-header\">\n            <h3><i className=\"fas fa-clock\"></i> Meal Windows</h3>\n            <p>Configure meal time windows and attendance periods</p>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"meal-windows-grid\">\n              {Object.entries(mealWindows).map(([mealType, config]) => (\n                <div key={mealType} className=\"meal-window-item\">\n                  <div className=\"meal-header\">\n                    <label className=\"meal-checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        checked={config.enabled}\n                        onChange={(e) => setMealWindows({\n                          ...mealWindows,\n                          [mealType]: { ...config, enabled: e.target.checked }\n                        })}\n                      />\n                      <span className=\"meal-name\">{mealType.charAt(0).toUpperCase() + mealType.slice(1)}</span>\n                    </label>\n                  </div>\n                  {config.enabled && (\n                    <div className=\"meal-config\">\n                      <div className=\"time-inputs\">\n                        <div className=\"input-group\">\n                          <label>Start Time</label>\n                          <input\n                            type=\"time\"\n                            value={config.startTime}\n                            onChange={(e) => setMealWindows({\n                              ...mealWindows,\n                              [mealType]: { ...config, startTime: e.target.value }\n                            })}\n                          />\n                        </div>\n                        <div className=\"input-group\">\n                          <label>End Time</label>\n                          <input\n                            type=\"time\"\n                            value={config.endTime}\n                            onChange={(e) => setMealWindows({\n                              ...mealWindows,\n                              [mealType]: { ...config, endTime: e.target.value }\n                            })}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n            \n            {mealWindowsMessage && (\n              <div className={`settings-message ${mealWindowsMessage.includes('✅') ? 'success' : 'error'}`}>\n                {mealWindowsMessage}\n              </div>\n            )}\n            \n            <div className=\"card-actions\">\n              <button \n                onClick={handleSaveMealWindows}\n                className=\"settings-btn primary\"\n                disabled={mealWindowsLoading}\n              >\n                {mealWindowsLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i>\n                    Saving...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"fas fa-save\"></i>\n                    Save Meal Windows\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Database Reset Card */}\n        <div className=\"settings-card\">\n          <div className=\"card-header\">\n            <h3><i className=\"fas fa-exclamation-triangle\"></i> Database Reset</h3>\n            <p>Reset database and manage system data</p>\n          </div>\n          <div className=\"card-content\">\n            <DatabaseResetComponent />\n          </div>\n        </div>\n      </div>\n\n      {/* Modals would go here - truncated for space */}\n    </div>\n  );\n};\n\nexport default AdminSettings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}