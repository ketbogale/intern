{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Intern\\\\src\\\\components\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './AttendancePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendancePage = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [student, setStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [mealWindowBlocked, setMealWindowBlocked] = useState(true);\n  const [nextMealInfo, setNextMealInfo] = useState('');\n  const [countdownSeconds, setCountdownSeconds] = useState(0);\n  const [mealWindows, setMealWindows] = useState({});\n  const inputRef = useRef(null);\n  const successAudioRef = useRef(null);\n  const errorAudioRef = useRef(null);\n\n  // Fetch meal windows from server\n  const fetchMealWindows = async () => {\n    try {\n      const response = await fetch('/api/meal-windows');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.mealWindows) {\n          setMealWindows(data.mealWindows);\n        } else {\n          console.error('Invalid API response structure:', data);\n        }\n      } else {\n        console.error('API request failed:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching meal windows:', error);\n    }\n  };\n\n  // Meal window timing logic (strict start → end only)\n  const checkMealWindow = useCallback(() => {\n    if (Object.keys(mealWindows).length === 0) {\n      setMealWindowBlocked(true);\n      return;\n    }\n    const now = new Date();\n    const currentMinutes = now.getHours() * 60 + now.getMinutes();\n    const mealWindowsInMinutes = {};\n    Object.entries(mealWindows).forEach(([mealType, config]) => {\n      if (config.enabled) {\n        const [startHour, startMinute] = config.startTime.split(':').map(Number);\n        const [endHour, endMinute] = config.endTime.split(':').map(Number);\n        const startTime = startHour * 60 + startMinute;\n        const endTime = endHour * 60 + endMinute;\n        mealWindowsInMinutes[mealType] = {\n          start: startTime,\n          end: endTime\n        };\n      }\n    });\n    let isInMealWindow = false;\n    let nextMealType = '';\n    let timeUntilOpen = null;\n\n    // Check if in any valid meal window\n    for (const [mealType, window] of Object.entries(mealWindowsInMinutes)) {\n      if (currentMinutes >= window.start && currentMinutes <= window.end) {\n        isInMealWindow = true;\n        break;\n      }\n    }\n    if (!isInMealWindow) {\n      // Find next meal window\n      const sortedWindows = Object.entries(mealWindowsInMinutes).sort(([, a], [, b]) => a.start - b.start);\n      for (const [meal, window] of sortedWindows) {\n        if (currentMinutes < window.start) {\n          nextMealType = meal;\n          timeUntilOpen = window.start - currentMinutes;\n          break;\n        }\n      }\n\n      // If no meal left today, use first tomorrow\n      if (!nextMealType && sortedWindows.length > 0) {\n        const [firstMeal, firstWindow] = sortedWindows[0];\n        nextMealType = firstMeal;\n        timeUntilOpen = firstWindow.start + 24 * 60 - currentMinutes;\n      }\n    }\n    setMealWindowBlocked(!isInMealWindow);\n    if (timeUntilOpen) {\n      setCountdownSeconds(timeUntilOpen * 60);\n      const hours = Math.floor(timeUntilOpen / 60);\n      const minutes = timeUntilOpen % 60;\n      const nextWindowTime = new Date();\n      nextWindowTime.setMinutes(nextWindowTime.getMinutes() + timeUntilOpen);\n      const timeString = nextWindowTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      let timeText;\n      if (hours > 0) {\n        timeText = `${hours}h ${minutes}m (${timeString})`;\n      } else {\n        timeText = `${minutes}m (${timeString})`;\n      }\n      setNextMealInfo(`${nextMealType.charAt(0).toUpperCase() + nextMealType.slice(1)} window opens in ${timeText}`);\n    } else {\n      setCountdownSeconds(0);\n      setNextMealInfo('');\n    }\n  }, [mealWindows]);\n\n  // Initial load\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    fetchMealWindows();\n  }, []);\n\n  // Re-check whenever meal windows change\n  useEffect(() => {\n    if (Object.keys(mealWindows).length > 0) {\n      checkMealWindow();\n      const interval = setInterval(checkMealWindow, 60000);\n      return () => clearInterval(interval);\n    }\n  }, [mealWindows, checkMealWindow]);\n\n  // Countdown timer in seconds\n  useEffect(() => {\n    if (countdownSeconds > 0) {\n      const interval = setInterval(() => {\n        setCountdownSeconds(prev => Math.max(0, prev - 1));\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [countdownSeconds]);\n  const playSound = isSuccess => {\n    try {\n      if (isSuccess && successAudioRef.current) {\n        successAudioRef.current.play();\n      } else if (!isSuccess && errorAudioRef.current) {\n        errorAudioRef.current.play();\n      }\n    } catch (error) {\n      console.log('Audio playback failed:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!studentId.trim()) return;\n    if (mealWindowBlocked) {\n      setMessage(`❌ Attendance blocked: ${nextMealInfo || 'Meal window closed'}`);\n      playSound(false);\n      return;\n    }\n    setIsLoading(true);\n    setMessage('');\n    setStudent(null);\n    try {\n      const response = await fetch('/api/attendance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          studentId: studentId.trim()\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setStudent(data.student);\n        setStatus(data.status);\n        switch (data.status) {\n          case 'allowed':\n            setMessage('✅ Meal allowed! Welcome!');\n            playSound(true);\n            break;\n          case 'already_used':\n            setMessage('❌ Meal already used for this period');\n            playSound(false);\n            break;\n          case 'invalid':\n            setMessage('❌ Student ID not found');\n            playSound(false);\n            break;\n          case 'blocked':\n            setMessage(`❌ ${data.message || 'Meal window is closed'}`);\n            playSound(false);\n            break;\n          case 'error':\n            setMessage(`❌ ${data.message || 'System error occurred'}`);\n            playSound(false);\n            break;\n          default:\n            setMessage('❌ Unknown status');\n            playSound(false);\n        }\n      } else {\n        setMessage('❌ System error. Please try again.');\n        playSound(false);\n      }\n    } catch (error) {\n      setMessage('❌ Network error. Please check connection.');\n      playSound(false);\n    } finally {\n      setIsLoading(false);\n      setStudentId('');\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', {\n        method: 'POST'\n      });\n      onLogout();\n    } catch (error) {\n      console.error('Logout error:', error);\n      onLogout();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/salale_university_logo.png\",\n          alt: \"Salale University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Salale University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sign-out-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attendance-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-card\",\n            children: [mealWindowBlocked && nextMealInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-window-warning\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-clock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"countdown-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: nextMealInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this), countdownSeconds > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"countdown-timer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"countdown-number\",\n                    children: countdownSeconds >= 3600 ? `${Math.floor(countdownSeconds / 3600)}h ${Math.floor(countdownSeconds % 3600 / 60)}m` : countdownSeconds >= 60 ? `${Math.floor(countdownSeconds / 60)}m ${countdownSeconds % 60}s` : `${countdownSeconds}s`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"countdown-label\",\n                    children: \"remaining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"studentId\",\n                children: \"Student ID (Manual or Scan Barcode):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: inputRef,\n                type: \"text\",\n                id: \"studentId\",\n                value: studentId,\n                onChange: e => setStudentId(e.target.value),\n                placeholder: mealWindowBlocked ? \"Meal window closed\" : \"Enter ID\",\n                autoComplete: \"off\",\n                disabled: mealWindowBlocked,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"check-btn\",\n                disabled: isLoading || mealWindowBlocked,\n                children: mealWindowBlocked ? 'Meal Window Closed' : isLoading ? 'Checking...' : 'Check Attendance'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `attendance-message ${status}`,\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-section\",\n          children: student && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-message ${status}`,\n              children: status === 'allowed' ? '✅ ALLOWED' : status === 'already_used' ? '❌ ALREADY USED' : '❌ DENIED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 26\n                  }, this), \" \", student.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"ID Number:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 26\n                  }, this), \" \", student.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Program:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 26\n                  }, this), \" \", student.department]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-photo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: student.photoUrl || '/images/default-student.png',\n                  alt: \"Student Photo\",\n                  onError: e => {\n                    e.target.src = '/images/default-student.png';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: successAudioRef,\n      preload: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/sounds/success.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: errorAudioRef,\n      preload: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/sounds/error.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"Dpr0kQpFTOZmFrFBVpAAKS6FLvw=\");\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","AttendancePage","user","onLogout","_s","studentId","setStudentId","student","setStudent","message","setMessage","status","setStatus","isLoading","setIsLoading","mealWindowBlocked","setMealWindowBlocked","nextMealInfo","setNextMealInfo","countdownSeconds","setCountdownSeconds","mealWindows","setMealWindows","inputRef","successAudioRef","errorAudioRef","fetchMealWindows","response","fetch","ok","data","json","success","console","error","statusText","checkMealWindow","Object","keys","length","now","Date","currentMinutes","getHours","getMinutes","mealWindowsInMinutes","entries","forEach","mealType","config","enabled","startHour","startMinute","startTime","split","map","Number","endHour","endMinute","endTime","start","end","isInMealWindow","nextMealType","timeUntilOpen","window","sortedWindows","sort","a","b","meal","firstMeal","firstWindow","hours","Math","floor","minutes","nextWindowTime","setMinutes","timeString","toLocaleTimeString","hour","minute","timeText","charAt","toUpperCase","slice","current","focus","interval","setInterval","clearInterval","prev","max","playSound","isSuccess","play","log","handleSubmit","e","preventDefault","trim","method","headers","body","JSON","stringify","setTimeout","handleLogout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","ref","type","id","value","onChange","target","placeholder","autoComplete","disabled","required","name","department","photoUrl","onError","preload","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/Intern/src/components/AttendancePage.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './AttendancePage.css';\n\nconst AttendancePage = ({ user, onLogout }) => {\n  const [studentId, setStudentId] = useState('');\n  const [student, setStudent] = useState(null);\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [mealWindowBlocked, setMealWindowBlocked] = useState(true);\n  const [nextMealInfo, setNextMealInfo] = useState('');\n  const [countdownSeconds, setCountdownSeconds] = useState(0);\n  const [mealWindows, setMealWindows] = useState({});\n  const inputRef = useRef(null);\n  const successAudioRef = useRef(null);\n  const errorAudioRef = useRef(null);\n\n  // Fetch meal windows from server\n  const fetchMealWindows = async () => {\n    try {\n      const response = await fetch('/api/meal-windows');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.mealWindows) {\n          setMealWindows(data.mealWindows);\n        } else {\n          console.error('Invalid API response structure:', data);\n        }\n      } else {\n        console.error('API request failed:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching meal windows:', error);\n    }\n  };\n\n  // Meal window timing logic (strict start → end only)\n  const checkMealWindow = useCallback(() => {\n    if (Object.keys(mealWindows).length === 0) {\n      setMealWindowBlocked(true);\n      return;\n    }\n\n    const now = new Date();\n    const currentMinutes = now.getHours() * 60 + now.getMinutes();\n\n    const mealWindowsInMinutes = {};\n    Object.entries(mealWindows).forEach(([mealType, config]) => {\n      if (config.enabled) {\n        const [startHour, startMinute] = config.startTime.split(':').map(Number);\n        const [endHour, endMinute] = config.endTime.split(':').map(Number);\n\n        const startTime = startHour * 60 + startMinute;\n        const endTime = endHour * 60 + endMinute;\n\n        mealWindowsInMinutes[mealType] = {\n          start: startTime,\n          end: endTime\n        };\n      }\n    });\n\n    let isInMealWindow = false;\n    let nextMealType = '';\n    let timeUntilOpen = null;\n\n    // Check if in any valid meal window\n    for (const [mealType, window] of Object.entries(mealWindowsInMinutes)) {\n      if (currentMinutes >= window.start && currentMinutes <= window.end) {\n        isInMealWindow = true;\n        break;\n      }\n    }\n\n    if (!isInMealWindow) {\n      // Find next meal window\n      const sortedWindows = Object.entries(mealWindowsInMinutes)\n        .sort(([, a], [, b]) => a.start - b.start);\n\n      for (const [meal, window] of sortedWindows) {\n        if (currentMinutes < window.start) {\n          nextMealType = meal;\n          timeUntilOpen = window.start - currentMinutes;\n          break;\n        }\n      }\n\n      // If no meal left today, use first tomorrow\n      if (!nextMealType && sortedWindows.length > 0) {\n        const [firstMeal, firstWindow] = sortedWindows[0];\n        nextMealType = firstMeal;\n        timeUntilOpen = firstWindow.start + (24 * 60) - currentMinutes;\n      }\n    }\n\n    setMealWindowBlocked(!isInMealWindow);\n\n    if (timeUntilOpen) {\n      setCountdownSeconds(timeUntilOpen * 60);\n\n      const hours = Math.floor(timeUntilOpen / 60);\n      const minutes = timeUntilOpen % 60;\n\n      const nextWindowTime = new Date();\n      nextWindowTime.setMinutes(nextWindowTime.getMinutes() + timeUntilOpen);\n      const timeString = nextWindowTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n      let timeText;\n      if (hours > 0) {\n        timeText = `${hours}h ${minutes}m (${timeString})`;\n      } else {\n        timeText = `${minutes}m (${timeString})`;\n      }\n\n      setNextMealInfo(\n        `${nextMealType.charAt(0).toUpperCase() + nextMealType.slice(1)} window opens in ${timeText}`\n      );\n    } else {\n      setCountdownSeconds(0);\n      setNextMealInfo('');\n    }\n  }, [mealWindows]);\n\n  // Initial load\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    fetchMealWindows();\n  }, []);\n\n  // Re-check whenever meal windows change\n  useEffect(() => {\n    if (Object.keys(mealWindows).length > 0) {\n      checkMealWindow();\n      const interval = setInterval(checkMealWindow, 60000);\n      return () => clearInterval(interval);\n    }\n  }, [mealWindows, checkMealWindow]);\n\n  // Countdown timer in seconds\n  useEffect(() => {\n    if (countdownSeconds > 0) {\n      const interval = setInterval(() => {\n        setCountdownSeconds(prev => Math.max(0, prev - 1));\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [countdownSeconds]);\n\n  const playSound = (isSuccess) => {\n    try {\n      if (isSuccess && successAudioRef.current) {\n        successAudioRef.current.play();\n      } else if (!isSuccess && errorAudioRef.current) {\n        errorAudioRef.current.play();\n      }\n    } catch (error) {\n      console.log('Audio playback failed:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!studentId.trim()) return;\n\n    if (mealWindowBlocked) {\n      setMessage(`❌ Attendance blocked: ${nextMealInfo || 'Meal window closed'}`);\n      playSound(false);\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage('');\n    setStudent(null);\n\n    try {\n      const response = await fetch('/api/attendance', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ studentId: studentId.trim() }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setStudent(data.student);\n        setStatus(data.status);\n\n        switch (data.status) {\n          case 'allowed':\n            setMessage('✅ Meal allowed! Welcome!');\n            playSound(true);\n            break;\n          case 'already_used':\n            setMessage('❌ Meal already used for this period');\n            playSound(false);\n            break;\n          case 'invalid':\n            setMessage('❌ Student ID not found');\n            playSound(false);\n            break;\n          case 'blocked':\n            setMessage(`❌ ${data.message || 'Meal window is closed'}`);\n            playSound(false);\n            break;\n          case 'error':\n            setMessage(`❌ ${data.message || 'System error occurred'}`);\n            playSound(false);\n            break;\n          default:\n            setMessage('❌ Unknown status');\n            playSound(false);\n        }\n      } else {\n        setMessage('❌ System error. Please try again.');\n        playSound(false);\n      }\n    } catch (error) {\n      setMessage('❌ Network error. Please check connection.');\n      playSound(false);\n    } finally {\n      setIsLoading(false);\n      setStudentId('');\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 100);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/logout', { method: 'POST' });\n      onLogout();\n    } catch (error) {\n      console.error('Logout error:', error);\n      onLogout();\n    }\n  };\n\n  return (\n    <div className=\"attendance-container\">\n      <div className=\"attendance-header\">\n        <div className=\"header-left\">\n          <img src=\"/images/salale_university_logo.png\" alt=\"Salale University\" />\n          <h1>Salale University</h1>\n        </div>\n        <button onClick={handleLogout} className=\"logout-btn\">\n          <i className=\"fas fa-sign-out-alt\"></i>\n          Logout\n        </button>\n      </div>\n\n      <div className=\"attendance-content\">\n        <div className=\"attendance-layout\">\n          {/* Left side: Input form */}\n          <div className=\"input-section\">\n            <div className=\"input-card\">\n              {mealWindowBlocked && nextMealInfo && (\n                <div className=\"meal-window-warning\">\n                  <i className=\"fas fa-clock\"></i>\n                  <div className=\"countdown-info\">\n                    <span>{nextMealInfo}</span>\n                    {countdownSeconds > 0 && (\n                      <div className=\"countdown-timer\">\n                        <span className=\"countdown-number\">\n                          {countdownSeconds >= 3600\n                            ? `${Math.floor(countdownSeconds / 3600)}h ${Math.floor((countdownSeconds % 3600) / 60)}m`\n                            : countdownSeconds >= 60\n                            ? `${Math.floor(countdownSeconds / 60)}m ${countdownSeconds % 60}s`\n                            : `${countdownSeconds}s`}\n                        </span>\n                        <span className=\"countdown-label\">remaining</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"studentId\">Student ID (Manual or Scan Barcode):</label>\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  id=\"studentId\"\n                  value={studentId}\n                  onChange={(e) => setStudentId(e.target.value)}\n                  placeholder={mealWindowBlocked ? \"Meal window closed\" : \"Enter ID\"}\n                  autoComplete=\"off\"\n                  disabled={mealWindowBlocked}\n                  required\n                />\n                <button type=\"submit\" className=\"check-btn\" disabled={isLoading || mealWindowBlocked}>\n                  {mealWindowBlocked ? 'Meal Window Closed' : isLoading ? 'Checking...' : 'Check Attendance'}\n                </button>\n              </form>\n\n              {message && (\n                <div className={`attendance-message ${status}`}>\n                  {message}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right side: Student information */}\n          <div className=\"result-section\">\n            {student && (\n              <div className=\"student-card\">\n                <div className={`status-message ${status}`}>\n                  {status === 'allowed' ? '✅ ALLOWED' :\n                   status === 'already_used' ? '❌ ALREADY USED' :\n                   '❌ DENIED'}\n                </div>\n                <div className=\"student-info-row\">\n                  <div className=\"student-details\">\n                    <div><strong>Name:</strong> {student.name}</div>\n                    <div><strong>ID Number:</strong> {student.id}</div>\n                    <div><strong>Program:</strong> {student.department}</div>\n                  </div>\n                  <div className=\"student-photo\">\n                    <img\n                      src={student.photoUrl || '/images/default-student.png'}\n                      alt=\"Student Photo\"\n                      onError={(e) => {\n                        e.target.src = '/images/default-student.png';\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Audio elements */}\n      <audio ref={successAudioRef} preload=\"auto\">\n        <source src=\"/sounds/success.mp3\" type=\"audio/mpeg\" />\n      </audio>\n      <audio ref={errorAudioRef} preload=\"auto\">\n        <source src=\"/sounds/error.mp3\" type=\"audio/mpeg\" />\n      </audio>\n    </div>\n  );\n};\n\nexport default AttendancePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}